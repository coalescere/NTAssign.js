{"version":3,"sources":["Energy.js","Assign.js","Plot.js","main.js"],"names":["getRBMParameters","p","type","Param","a","b","this","Error","wRBM2Dt","wRBM","ab","dt2RBM","dt","getEnergyFromCos3Theta","cos3Theta","mod","r","isMetal","derivative","param","c","sgE","extMod","Math","log10","betap","getCos3Theta","val","calc","toFixed","getAverage","splitting","pLesser","pLarger","err","message","delta","x","getList","li","nMin","nMax","seriesThreshold","n","m","dl","getEnergy","Dt","Theta","dh","push","Mod","getRBMArray","d","rbmLabel","rbm","cos3ThetaMax","wRBMMin","wRBMMax","t","plus","minus","getPlotParams","params","decimalDigits","split","length","val1","val2","uncertainty","pow","E1R1","min","E2","p1","p2","p1ToP","parseFloat","cos","resultString","error","Assign","bluePoint","point","pToLesser","pointType","p1Lesser","p1ToLesser","pAnother","modAnother","p1Arr","valAnother","_ref","_ref2","y","p_1","p_2","_ref3","_ref4","_ref5","average","setBounds","dxMin_","dxMax_","dyMin_","dyMax_","dxMin","dxMax","dyMin","dyMax","processOutput","result","query","orderBy","Dist_","toArray","i","round","arguments","undefined","Dist","x1","y1","x2","y2","sqrt","e","deltaX","maxY","minY","all","Enumerable","from","where","uc","ar","AssignResult","count","accurate","union","possible","tmp","impossible","yMax","xMin","xMax","s","rbmPos","between","xy","r1","r2","u","q","groupBy","key","group","value","select","map","ee","allLabel","resultLabel","yAxisLabel","p1Arr_raw","xAxisLabel","drawPlot","placeholder","defaultRadius","yMin","font","size","lineHeight","family","options","xaxis","show","position","max","tickLength","tickColor","color","yaxis","series","hoverable","grid","borderColor","top","bottom","left","right","minBorderMargin","data","shadowSize","laser","laser_color","concat","id","toString","fillBetween","lines","fill","lineWidth","mod_i","points","radius","symbol","point_labels","fillColor","$placeholder","$","plot","previousPoint","bind","event","pos","item","dataIndex","remove","showTooltip","pageX","pageY","floor","o","pointOffset","axes","getAxes","append","mid","pMid","divMid","div","dA","c1","c2","c3","o1","contents","css","display","appendTo","fadeIn","clearTitle","find","removeAttr","validate","form","$hint","invokeError","msg","addClass","html","val1_","parseInt","Val1","val2_","Val2","rbm_","RBM","emptyNum","Number","isNaN","selectpicker","changeEdit","mainP1","calculate","NCalc","MCalc","urlParams","$result","isAirSuspended","editRBM","rbmAS","click","rbmGeneral","keyArr","valArr","_loop","i1","$calcResult","plotParams","plotId","containerId","$container","clone","attr","MathJax","Hub","Queue","typeArr","PI","atan","isMetalP","isMetalNM","theta","timeLoad","performance","now","timeStartup","getScript","navigator","language","substr","toLowerCase","console","log","window","onpopstate","match","pl","search","decode","decodeURIComponent","replace","location","substring","exec","test","userAgent","$body","hasClass","$selectType","on","href","innerHTML","style","$selectP1","$selectP2","$selectP1P2","threshold","index","each","_arr","_i3","valueBetween"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n'use strict';\r\n\r\nconst AssignResult = {\r\n    accurate : 0,\r\n    possible : 1,\r\n    impossible : 2,\r\n    error : 3\r\n};\r\n\r\nconst typeArr = [\r\n    \"Air-suspended SWNTs\", \"SWNTs on \\\\(\\\\mathrm{SiO_2}/\\\\mathrm{Si}\\\\) substrates\", \"SWNT arrays on quartz substrates\",\r\n    \"\\\"Super-growth\\\" SWNTs\", \"SDS-dispersed SWNTs\", \"ssDNA-dispersed SWNTs\"\r\n];\r\nconst param = [\r\n    [ 1.194, 0.179, 0.053 ],\r\n    [ 2.110, 0.388, 0.154 ],\r\n    [ 3.170, 0.764, 0.286 ], //M11\r\n    [ 4.286, 1.230, 0.412 ],\r\n    [ 5.380, 1.922, 0.644 ],\r\n    [ 6.508, 2.768, 0.928 ], //M22\r\n    [ 7.624, 3.768, 1.024 ], //S55\r\n    [ 8.734, 4.921, 1.479 ], //S66\r\n    [ 9.857, 6.228, 1.692 ]  //M33\r\n];\r\nconst betap =[\r\n    [ 0.09, -0.07 ],\r\n    [ -0.18, 0.14 ],\r\n    [ -0.19, 0.29 ],\r\n    [ 0.49, -0.33 ],\r\n    [ -0.43, 0.59 ],\r\n    [ -0.6, 0.57 ]\r\n];\r\n\r\nconst p1Arr = [\r\n    \"\\\\(S_{11}\\\\)\", \"\\\\(S_{22}\\\\)\", \"\\\\(M_{11}^-\\\\)\", \"\\\\(M_{11}^+\\\\)\", \"\\\\(S_{33}\\\\)\", \"\\\\(S_{44}\\\\)\",\r\n    \"\\\\(M_{22}^-\\\\)\", \"\\\\(M_{22}^+\\\\)\", \"\\\\(S_{55}\\\\)\", \"\\\\(S_{66}\\\\)\", \"\\\\(M_{33}^-\\\\)\", \"\\\\(M_{33}^+\\\\)\"\r\n];\r\n\r\nconst p1Arr_raw = [\r\n    \"S_{11}\", \"S_{22}\", \"M_{11}^-\", \"M_{11}^+\", \"S_{33}\", \"S_{44}\", \"M_{22}^-\", \"M_{22}^+\", \"S_{55}\", \"S_{66}\",\r\n    \"M_{33}^-\", \"M_{33}^+\"\r\n];\r\n\r\nconst p1ToP = [ 0, 1, 2, 2, 3, 4, 5, 5, 6, 7, 8, 8 ];\r\nconst pToLesser = [ 0, 0, 2, 3, 3, 5, 6, 6, 9 ];\r\nconst p1ToLesser = (p1) => p1 % 2 === 0 ? p1 : p1 - 1;\r\n\r\nconst Dt = (n, m, type) => ((type !== 4) ? 0.142 : 0.144) * Math.sqrt(3 * (n * n + n * m + m * m)) / Math.PI;\r\nconst Theta = (n, m) => Math.atan(Math.sqrt(3) * m / (2 * n + m));\r\nconst Mod = (n, m) => (2 * n + m) % 3;\r\nconst isMetalP = (p) => (p + 1) % 3 === 0;\r\nconst isMetalNM = (n, m) => Mod(n, m) === 0;\r\nconst isMetal = function () { return arguments.length === 2 ?\r\n    isMetalNM(arguments[0], arguments[1]) :\r\n    isMetalP(arguments[0]); };\r\n\r\nfunction getRBMParameters(p, type) {\r\n    function Param(a, b) { this.a = a; this.b = b; }\r\n    switch (type) {\r\n        case 0: switch (p) {\r\n                case 0: case 1: return new Param(204, 27);\r\n                case 2: return new Param(200, 26);\r\n                default: return new Param(228, 0);\r\n        }\r\n        case 1: return new Param(235.9, 5.5);\r\n        case 2: return new Param(217.8, 15.7);\r\n        case 3: return new Param(227.0, 0.3);\r\n        case 4: return new Param(223.5, 12.5);\r\n        case 5: return new Param(218, 18.3);\r\n        default: throw new Error(\"invalid type\");\r\n    }\r\n}\r\n\r\nfunction wRBM2Dt(wRBM, p, type) {\r\n    let ab = getRBMParameters(p, type);\r\n    return ab.a / (wRBM - ab.b);\r\n}\r\n\r\nfunction dt2RBM(dt, p, type) {\r\n    let ab = getRBMParameters(p, type);\r\n    return ab.a / dt + ab.b;\r\n}\r\n\r\nconst getEnergy = (dt, theta, p, type, mod) => getEnergyFromCos3Theta(dt, Math.cos(3 * theta), p, type, mod);\r\n\r\nfunction getEnergyFromCos3Theta(dt, cos3Theta, p, type, mod)\r\n{\r\n    let r; // return value\r\n    if (isMetal(p) && mod > 0)\r\n        throw new Error(\"mod should be in accordance with p\");\r\n    if (type <= 2) {\r\n\r\n        if (p >= 9)\r\n            throw new Error(\"higher than S66 not available\");\r\n        let derivative = -param[p][0] / (dt * dt) + 2 * param[p][1] / (dt * dt * dt);\r\n        if (derivative > 0) // 1st derivative\r\n            throw new Error(\"dt\");\r\n        if (isMetal(p))\r\n            r = param[p][0] / dt - param[p][1] / (dt * dt) + param[p][2] / (dt * dt) * cos3Theta * (mod * 2 + 1);\r\n        // mod * 2 + 1 <==> mod === 0 ? 1 : -1\r\n        else\r\n            r = param[p][0] / dt - param[p][1] / (dt * dt) +\r\n                param[p][2] / (dt * dt) * cos3Theta * (((p % 3) === (mod % 2)) ? -1 : 1);\r\n        r -= (type === 1) ? 0.04 : ((type === 2) ? 0.1 : 0);\r\n\r\n    } else if (type === 3) {\r\n\r\n        if (p >= 6)\r\n            throw new Error(\"higher than M22 not available for Super-Growth\");\r\n        let a = 1.074, b = 0.467, c = 0.812;\r\n        let sgE = (extMod) => a * (p + 1) / dt * (1 + b * Math.log10(c / ((p + 1) / dt)))\r\n            + betap[p][extMod] / (dt * dt) * cos3Theta\r\n            + ((p > 2) ? 0.059 * (p + 1) / dt : 0); // extra for larger than M11; warning: p + 1\r\n        if (isMetal(p))\r\n            r = sgE(mod + 1); // 0(Mii+) -> 1, -1(Mii-) -> 0\r\n        else\r\n            r = sgE(mod - 1); // 1(MOD1) -> 0, 2(MOD2) -> 1\r\n\r\n    } else if (type === 4 || type === 5) {\r\n\r\n        if (p === 0)\r\n            r = 1 / (0.1270 + 0.8606 * dt) + ((mod === 1) ? 0.04575 : -0.08802) / (dt * dt) * cos3Theta;\r\n        else if (p === 1)\r\n            r = 1 / (0.1174 + 0.4644 * dt) + ((mod === 1) ? -0.1829 : 0.1705) / (dt * dt) * cos3Theta;\r\n        else\r\n            throw new Error(\"only S11 and S22 are available for SDS-dispersed or ssDNA dispersed\");\r\n        r -= (type === 5) ? 0.02 : 0;\r\n\r\n    } else throw new Error(\"invalid type\");\r\n\r\n    return r;\r\n}\r\n\r\nfunction getCos3Theta(val, dt, p, type) {\r\n\r\n    // returns cos3Theta as [val_modLesser, val_modLarger]\r\n\r\n    let r = [-1, -1];\r\n\r\n    if (type <= 2) {\r\n\r\n        if (p >= 9)\r\n            throw new Error(\"higher than S66 not available\");\r\n        val += (type === 1) ? 0.04 : ((type === 2) ? 0.1 : 0);\r\n        if (isMetal(p)) {\r\n            r[0] = (param[p][0] / dt - param[p][1] / (dt * dt) - val) / param[p][2] * (dt * dt); // Mii-\r\n            r[1] = (-(param[p][0] / dt - param[p][1] / (dt * dt) - val)) / param[p][2] * (dt * dt); // Mii+\r\n        } else {\r\n            r[0] = (-(param[p][0] / dt - param[p][1] / (dt * dt) - val))\r\n                / param[p][2] * (dt * dt) * (((p % 3) === (1 % 2)) ? -1 : 1); //mod1\r\n            r[1] = (-(param[p][0] / dt - param[p][1] / (dt * dt) - val))\r\n                / param[p][2] * (dt * dt) * (((p % 3) === (2 % 2)) ? -1 : 1); //mod2\r\n        }\r\n\r\n    } else if (type === 3) {\r\n\r\n        if (p >= 6)\r\n            throw new Error(\"higher than M22 not available for Super-Growth\");\r\n        let a = 1.074, b = 0.467, c = 0.812;\r\n        let calc = (extMod) => (val - a * (p + 1) / dt * (1 + b * Math.log10(c / ((p + 1) / dt))) -\r\n            ((p > 2) ? 0.059 * (p + 1) / dt : 0)) / betap[p][extMod] * (dt * dt);\r\n        r[0] = calc(0); //Mii- or MOD1\r\n        r[1] = calc(1);\r\n\r\n    } else if (type === 4 || type === 5) {\r\n\r\n        val += (type === 5) ? 0.02 : 0;\r\n        if (p === 0) {\r\n            r[0] = (val - 1 / (0.1270 + 0.8606 * dt)) / 0.04575 * (dt * dt); // MOD1\r\n            r[1] = (val - 1 / (0.1270 + 0.8606 * dt)) / (-0.08802) * (dt * dt);\r\n        } else if (p === 1) {\r\n            r[0] = (val - 1 / (0.1174 + 0.4644 * dt)) / (-0.1829) * (dt * dt); //MOD1\r\n            r[1] = (val - 1 / (0.1174 + 0.4644 * dt)) / 0.1705 * (dt * dt);\r\n        } else throw new Error(\"only S11 and S22 are available for SDS-disp. or ssDNA disp.\");\r\n\r\n    } else throw new Error(\"invalid type\");\r\n\r\n    r[0] = r[0].toFixed(4); // 4位小数\r\n    r[1] = r[0].toFixed(4);\r\n    if (r[0] > 1 || r[0] < 0)\r\n        r[0] = -1;\r\n    if (r[1] > 1 || r[1] < 0)\r\n        r[1] = -1;\r\n    return r;\r\n\r\n}\r\n\r\nfunction getAverage(splitting, wRBM, pLesser, type) {\r\n\r\n    // returns null-able average\r\n\r\n    let dt = wRBM2Dt(wRBM, pLesser, type);\r\n\r\n    if (isMetal(pLesser + 1)) throw new Error(\"p should be the smaller one\");\r\n    if (type <= 2) {\r\n        if (pLesser >= 9)\r\n            throw new Error(\"higher than S66 not available\");\r\n\r\n        if (isMetal(pLesser)) {\r\n\r\n            let cos3Theta = dt * dt * splitting / 2 * param[pLesser][2];\r\n            if (cos3Theta < 0 || cos3Theta > 1) return null;\r\n            try {\r\n                return (\r\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, -1) +\r\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, 0)\r\n                ) / 2;\r\n            } catch (err) {\r\n                if (err.message === \"dt\")\r\n                    return null;\r\n                else throw err;\r\n            }\r\n        } else {\r\n            let pLarger = pLesser + 1;\r\n            let delta = (x) => param[pLarger][x] - param[pLesser][x];\r\n            let mod = 1;\r\n            let cos3Theta = (splitting * dt * dt - delta(0) * dt + delta(1)) / (\r\n                param[pLarger][2] * (((pLarger % 3) === (mod % 2)) ? -1 : 1) -\r\n                param[pLesser][2] * (((pLesser % 3) === (mod % 2)) ? -1 : 1)\r\n            );\r\n            if (cos3Theta < 0) {\r\n                mod = 2;\r\n                cos3Theta = -cos3Theta;\r\n            }\r\n            if (cos3Theta > 1) return null;\r\n            try {\r\n                return (\r\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLarger, type, mod) +\r\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, mod)\r\n                ) / 2;\r\n            } catch (err) {\r\n                if (err.message === \"dt\")\r\n                    return null;\r\n                else throw err;\r\n            }\r\n        }\r\n    } else if (type === 3) {\r\n        let a = 1.074, b = 0.467, c = 0.812;\r\n        let sgE = (p) => a * (p + 1) / dt * (1 + b * Math.log10(c / ((p + 1) / dt))) +\r\n            ((p > 2) ? 0.059 * (p + 1) / dt : 0);\r\n\r\n        if (isMetal(pLesser)) {\r\n\r\n            let cos3Theta = (splitting) * dt * dt / (betap[pLesser][1] - betap[pLesser][0]);\r\n            if (cos3Theta < 0 || cos3Theta > 1)\r\n                return null;\r\n            return (\r\n                getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, -1) +\r\n                getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, 0)\r\n            ) / 2;\r\n\r\n        } else {\r\n\r\n            let pLarger = pLesser + 1;\r\n            let mod = 1;\r\n            if (pLesser >= 6)\r\n                throw new Error(\"higher than M22 not available for Super-Growth\");\r\n            let cos3Theta = (splitting + sgE(pLesser) - sgE(pLarger)) * dt * dt / (\r\n                betap[pLarger][mod - 1] - betap[pLesser][mod - 1]\r\n            );\r\n            if (cos3Theta < 0 || cos3Theta > 1) {\r\n                mod = 2;\r\n                cos3Theta = (splitting + sgE(pLesser) - sgE(pLarger)) * dt * dt / (\r\n                    betap[pLarger][mod - 1] - betap[pLesser][mod - 1]);\r\n            }\r\n            if (cos3Theta < 0 || cos3Theta > 1)\r\n                return null;\r\n            return (\r\n                getEnergyFromCos3Theta(dt, cos3Theta, pLarger, type, mod) +\r\n                getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, mod)\r\n            ) / 2;\r\n        }\r\n\r\n    } else if (type === 4 || type === 5) {\r\n\r\n        if (pLesser !== 0)\r\n            throw new Error(\"only S11 and S22 are available for SDS-disp. or ssDNA disp.\");\r\n        let mod = 1;\r\n        let cos3Theta = (splitting - (1 / (0.1174 + 0.4644 * dt) - 1 / (0.1270 + 0.8606 * dt)))\r\n            * dt * dt / (-0.1829 - 0.04575);\r\n\r\n        if (cos3Theta > 1 || cos3Theta < 0) {\r\n            mod = 2;\r\n            cos3Theta = (splitting - (1 / (0.1174 + 0.4644 * dt) - 1 / (0.1270 + 0.8606 * dt)))\r\n                * dt * dt / (0.1705 - -0.08802);\r\n        }\r\n        if (cos3Theta > 1 || cos3Theta < 0)\r\n            return null;\r\n\r\n        return (\r\n            getEnergyFromCos3Theta(dt, cos3Theta, 1, type, mod) +\r\n            getEnergyFromCos3Theta(dt, cos3Theta, 0, type, mod)\r\n        ) / 2;\r\n    }\r\n    else throw new Error(\"invalid type\");\r\n}\r\n\r\nfunction getList(pLesser, type) {\r\n\r\n    let li = [];\r\n    const nMin = 5, nMax = 50, seriesThreshold = 90;\r\n\r\n    if (!isMetal(pLesser))\r\n    {\r\n        if (isMetal(pLesser + 1)) throw new Error(\"p should be the smaller one, e.g. S11 rather than S22\");\r\n        for (let n = nMin; n < nMax; n++)\r\n            for (let m = 0; m <= n; m++) {\r\n\r\n            if (2 * n + m > seriesThreshold) break;\r\n            try {\r\n                if (!isMetal(n, m)) {\r\n                    let dl = getEnergy(Dt(n, m, type), Theta(n, m), pLesser, type, Mod(n, m));\r\n                    let dh = getEnergy(Dt(n, m, type), Theta(n, m), pLesser + 1, type, Mod(n, m));\r\n                    li.push([ n, m, (dh + dl) / 2, (dh - dl) ]);\r\n                }\r\n            } catch (err) {\r\n                if (err.message !== \"dt\") throw err;\r\n            }\r\n        }\r\n    } else {\r\n        for (let n = nMin; n < nMax; n++)\r\n            for (let m = 0; m <= n; m++) {\r\n\r\n            if (2 * n + m > seriesThreshold) break;\r\n            try {\r\n                if (isMetal(n, m)) {\r\n                    let dl = getEnergy(Dt(n, m, type), Theta(n, m), pLesser, type, -1);\r\n                    let dh = getEnergy(Dt(n, m, type), Theta(n, m), pLesser, type, 0);\r\n                    li.push([ n, m, (dh + dl) / 2, (dh - dl) ]);\r\n                }\r\n            } catch (err) {\r\n                if (err.message !== \"dt\") throw err;\r\n            }\r\n        }\r\n    }\r\n    return li;\r\n}\r\n\r\nfunction getRBMArray(pLesser, type) {\r\n\r\n    let d = { rbmLabel: [], rbm: [] }; // return\r\n\r\n    const cos3ThetaMax = 60;\r\n    const wRBMMin = 70, wRBMMax = 350;\r\n    if (!isMetal(pLesser) && isMetal(pLesser + 1))\r\n        throw new Error(\"p should be the smaller one, e.g. S11 rather than S22\");\r\n\r\n    for (let rbm = wRBMMin; rbm <= wRBMMax; rbm += 10) {\r\n\r\n        let dt = wRBM2Dt(rbm, pLesser, type);\r\n        let t = [];\r\n        try {\r\n            if (isMetal(pLesser)) {\r\n                let plus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, 0);\r\n                let minus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, -1);\r\n                t.push([ (plus + minus) / 2, plus - minus ]);\r\n                plus = getEnergyFromCos3Theta(dt, -cos3ThetaMax, pLesser, type, 0);\r\n                minus = getEnergyFromCos3Theta(dt, -cos3ThetaMax, pLesser, type, -1);\r\n                t.push([ (plus + minus) / 2, plus - minus ]);\r\n                d.rbmLabel.push(rbm);\r\n                d.rbm.push(t);\r\n            } else {\r\n                let plus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser + 1, type, 1); //should it be higher?\r\n                let minus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, 1);\r\n                t.push([ (plus + minus) / 2, plus - minus ]);\r\n                plus = getEnergyFromCos3Theta(dt, 0, pLesser + 1, type, 2);\r\n                minus = getEnergyFromCos3Theta(dt, 0, pLesser, type, 2);\r\n                t.push([ (plus + minus) / 2, plus - minus ]);\r\n                plus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser + 1, type, 2);\r\n                minus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, 2);\r\n                t.push([ (plus + minus) / 2, plus - minus ]);\r\n                d.rbmLabel.push(rbm);\r\n                d.rbm.push(t);\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            if (err.message === \"dt\") break;\r\n            else throw err;\r\n        }\r\n    }\r\n\r\n    return d;\r\n}","\r\n'use strict';\r\n\r\nfunction getPlotParams(params) {\r\n    let decimalDigits = (d) => d.split('.')[1].length;\r\n\r\n    if (params.val1 === \"\" && params.val2 === \"\") {\r\n        throw new Error('Unauthorized Access');\r\n    } else if (params.val1 === \"\" || params.val2 === \"\") {\r\n        if (params.rbm === \"\") throw new Error('Unauthorized Access');\r\n        params.uncertainty = 2.0 / Math.pow(10, decimalDigits(params.val1 === \"\" ? params.val2 : params.val1 ));\r\n        return E1R1(params);\r\n    } else {\r\n        params.uncertainty = 2.0 / Math.pow(10,\r\n            Math.min(decimalDigits(params.val1), decimalDigits(params.val2))\r\n        );\r\n        return E2(params);\r\n    }\r\n}\r\n\r\nfunction E1R1(params) {\r\n\r\n    let p1 = (params.val1 === \"\" ? params.p2 : params.p1), type = params.type, p = p1ToP[p1]; // int\r\n    let val = parseFloat(params.val1 === \"\" ? params.val2 : params.val1); // float\r\n    let wRBM = parseFloat(params.rbm); // float, integrity checked in getPlotParam\r\n\r\n    let dt = wRBM2Dt(wRBM, p, type);\r\n    let cos = getCos3Theta(val, dt, p, type);\r\n    let resultString = \"\";\r\n    let error = () => Assign({\r\n        bluePoint: null,\r\n        point: [ val, 0.23 ],\r\n        pLesser: pToLesser[p],\r\n        type: type,\r\n        pointType: \"none\",\r\n        p1Lesser: p1ToLesser(p1),\r\n        resultString: resultString\r\n    });\r\n\r\n    if (cos[0] === -1 && cos[1] === -1) {\r\n        resultString += \"Invalid input: out of range.\";\r\n        return error();\r\n    }\r\n\r\n    let pAnother, modAnother;\r\n    if (isMetal(p)) {\r\n        if (p1 % 4 - 3 !== (cos[0] === -1 ? 0 : -1)) {\r\n            resultString += \"Invalid input: out of range. You may have mistakenly put \" + p1Arr[p1] + \" instead of \" +\r\n                p1Arr[p1 + 5 - (p1 % 4) * 2] + \".\";\r\n            return error();\r\n        }\r\n        pAnother = p;\r\n        modAnother = cos[0] === -1 ? -1 : 0;\r\n    }\r\n    else {\r\n        pAnother = isMetal(p + 1) ? p - 1 : p + 1;\r\n        modAnother = cos[0] === -1 ? 2 : 1; // === mod1\r\n    }\r\n\r\n    let valAnother;\r\n    try {\r\n        valAnother = getEnergyFromCos3Theta(dt, cos[0] === -1 ? cos[1] : cos[0], pAnother, type, modAnother);\r\n    }\r\n    catch (err) {\r\n        if (err.message === \"dt\") {\r\n            resultString += \"Invalid input: out of range, diameter too small.\";\r\n            return error();\r\n        }\r\n        else throw err;\r\n    }\r\n    if ((isMetal(p) && (modAnother === -1)) || (!isMetal(p) && (p > pAnother))) {\r\n        [p, pAnother] = [pAnother, p];\r\n        [val, valAnother] = [valAnother, val];\r\n    }\r\n    let x = (val + valAnother) / 2, y = valAnother - val;\r\n    return Assign({\r\n        bluePoint: null,\r\n        point: [x, y],\r\n        pLesser: p,\r\n        type: type,\r\n        pointType: \"green\",\r\n        p1Lesser: p1ToLesser(p1),\r\n        resultString: resultString\r\n    }, modAnother);\r\n\r\n}\r\n\r\n\r\nfunction E2(params) {\r\n\r\n    let resultString = \"\";\r\n    let p1 = params.p1, p2 = params.p2, type = params.type; // int\r\n    let val1 = parseFloat(params.val1), val2 = parseFloat(params.val2); // float, integrity checked in getPlotParams\r\n    let p_1 = p1ToP[p1], p_2 = p1ToP[p2]; // int\r\n    let rbm = params.rbm; // string\r\n\r\n    // don't use 'with' block\r\n    if (p1 > p2) {\r\n        [p_1, p_2] = [p_2, p_1];\r\n        [val1, val2] = [val2, val1];\r\n        [p1, p2] = [p2, p1];\r\n    }\r\n\r\n    if (isMetal(p_2) !== isMetal(p_1)) throw new Error(\"invalid form submission\");\r\n\r\n    if (p2 - p1 === 1) {\r\n        let bluePoint = null;\r\n        if (rbm !== \"\") {\r\n            let average = getAverage(val2 - val1, parseFloat(params.rbm), p_1, type);\r\n            if (average !== null)\r\n                bluePoint = [average, val2 - val1];\r\n            else\r\n                resultString += \"Invalid input: out of range. Please check your input RBM value.\" +\r\n                    \" Only transition energies are processed. \" +\r\n                    \"<br/ >\";\r\n        }\r\n        return Assign({\r\n            point: [ (val1 + val2) / 2, val2 - val1 ],\r\n            pLesser: p_1,\r\n            type: type,\r\n            pointType: \"red\",\r\n            bluePoint: bluePoint,\r\n            p1Lesser: p1,\r\n            resultString: resultString\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction Assign(params, mod = -1) {\r\n\r\n    // params: plotParams\r\n    // x: average y: splitting\r\n\r\n    let uncertainty = params.uncertainty;\r\n    let dxMin = -1, dxMax = -1, dyMin = -1, dyMax = -1;\r\n    let Dist = (x1, y1, x2, y2) => Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) * 25);\r\n    let Dist_ = (e) => Dist(e[2], e[3], params.point[0], params.point[1]);\r\n    let deltaX = 0.6,\r\n        maxY = isMetal(params.pLesser) ? 0.6 : params.point[1] + 0.6,\r\n        minY = isMetal(params.pLesser) ? -0.1 : params.point[1] - 0.6;\r\n\r\n    function setBounds(dxMin_, dxMax_, dyMin_, dyMax_) {\r\n        dxMin = dxMin_;\r\n        dxMax = dxMax_;\r\n        dyMin = dyMin_;\r\n        dyMax = dyMax_;\r\n    }\r\n\r\n    // https://github.com/mihaifm/linq, many thanks to you!\r\n\r\n    params.all = Enumerable.from(getList(params.pLesser, params.type))\r\n        .where(e => (e[2] >= params.point[0] - deltaX && e[2] <= params.point[0] + deltaX &&\r\n            e[3] <= maxY && e[3] >= minY))\r\n        .toArray();\r\n\r\n    let query = Enumerable.from(params.all)\r\n        .where(e => (\r\n            (mod === -1 || isMetal(params.pLesser) || mod === Mod(e[0], e[1])) &&\r\n            params.point[0] - e[2] >= dxMin && params.point[0] - e[2] <= dxMax &&\r\n            params.point[1] - e[3] >= dyMin && params.point[1] - e[3] <= dyMax\r\n        ));\r\n\r\n    setBounds(-uncertainty, uncertainty, -uncertainty, uncertainty);\r\n    let uc = query.toArray(); // query once to get uncertainty range\r\n\r\n    function processOutput() {\r\n        params.result = query.orderBy(Dist_).toArray();\r\n        for (let i = 0; i < params.result.length; i++)\r\n            params.resultString += \"<b>(\" + Math.round(params.result[i][0]) + \",\" +\r\n                Math.round(params.result[i][1]) + \")</b>\" +\r\n                (i !== params.result.length - 1 ? \", \" : \"\");\r\n        params.resultString += \"</span>\";\r\n    }\r\n\r\n    if (params.pointType === \"none\") {\r\n        params.ar = AssignResult.error;\r\n        params.result = [];\r\n        return params;\r\n    }\r\n\r\n    if (uncertainty > 0.2) {\r\n        params.resultString = \"Input uncertainty too large. Please give more significant figures.\";\r\n        params.ar = AssignResult.error;\r\n        params.result = [];\r\n        return params;\r\n    }\r\n\r\n    if (params.pointType === \"red\") {\r\n        if (params.bluePoint != null) {\r\n            if (params.bluePoint[0] - params.point[0] < 0.02) setBounds(-0.008, 0.008, -0.015, 0.015);\r\n            else setBounds(-0.030, -0.005, -0.015, 0.015); // don't change at this moment\r\n        } else setBounds(-0.020, 0.008, -0.015, 0.015);\r\n\r\n        if (query.count() === 1 && uc.length <= 1) {\r\n            params.ar = AssignResult.accurate;\r\n            params.resultString += \"The assignment result is:<br /><span style=\\\"font-size: 28px;\\\">\";\r\n            processOutput();\r\n            return params;\r\n        }\r\n        setBounds(-0.040, 0.0126, -0.030, 0.030);\r\n    } else setBounds(-0.070, 0.070, -0.040, 0.040);\r\n\r\n    query.union(uc);\r\n\r\n    if (query.count() > 0) {\r\n        params.ar = AssignResult.possible;\r\n        params.resultString += \"The likely assignments include:<br /><span style=\\\"font-size: 28px;\\\">\";\r\n        processOutput();\r\n        return params;\r\n    }\r\n\r\n    // use the green criteria and query again for no match.\r\n    // and it's easy to see that green point, if not returned in the previous step,\r\n    // will not give results in this step.\r\n\r\n    setBounds(-0.070, 0.070, -0.040, 0.040);\r\n    let tmp = Enumerable.from(params.all).orderBy(Dist_).toArray();\r\n    if (Dist_(tmp[0]) / Dist_(tmp[1]) <= 0.5 && query.count() !== 0) {\r\n        params.ar = AssignResult.impossible;\r\n        query = Enumerable.from([ tmp[0] ]);\r\n        params.resultString += \"No match. The most possible assignment result is:<br />\" +\r\n            \"<span style=\\\"font-size: 28px;\\\">\";\r\n        processOutput();\r\n        return params;\r\n    }\r\n\r\n    params.ar = AssignResult.error;\r\n    params.resultString = \"Invalid input: out of range. Please check your input.\";\r\n    params.result = [];\r\n    return params;\r\n}\r\n\r\nfunction processOutput(params) {\r\n\r\n    // process RBM\r\n\r\n    const yMax = isMetal(params.pLesser) ? 0.51 : params.point[1] + 0.4;\r\n    const xMin = params.point[0] - 0.5, xMax = params.point[0] + 0.5;\r\n    let s = getRBMArray(params.pLesser, params.type); // {rbm, rbmLabel}\r\n    let rbm = [];\r\n    let rbmLabel = [];\r\n    let rbmPos = [];\r\n    let between = (xy, r1, r2) => (xy >= r1 && xy <= r2) || (xy >= r2 && xy <= r1);\r\n    for (let i = 0 ; i < s.rbm.length; i++) {\r\n        let a = s.rbm[i];\r\n        let t;\r\n        if (a.length === 2)\r\n            t = (a[0][0] - a[1][0]) * (yMax - a[1][1]) / (a[0][1] - a[1][1]) + a[1][0];\r\n        else {\r\n            let u;\r\n            if (between(yMax, a[1][1], a[0][1]))\r\n                u = 0;\r\n            else // if between(a[1][1], a[2][1])\r\n                u = 2;\r\n            t = (a[u][0] - a[1][0]) * (yMax - a[1][1]) / (a[u][1] - a[1][1]) + a[1][0];\r\n        }\r\n        if (between(t, xMax, xMin)) {\r\n            rbm.push(s.rbm[i]);\r\n            rbmLabel.push(s.rbmLabel[i]);\r\n            rbmPos.push(t);\r\n        }\r\n    }\r\n    params.rbm = rbm;\r\n    params.rbmLabel = rbmLabel;\r\n    params.rbmPos = rbmPos;\r\n\r\n    // process all\r\n\r\n    let all = params.all; // you know, lazy evaluation\r\n    let q = Enumerable.from(all)\r\n        .groupBy(\r\n            e => 2 * e[0] + e[1], // key\r\n            e => e, // group element\r\n            (key, group) => ({ key: key, value: group.orderBy(e => e[0]).toArray() })\r\n        ); // use default compare method\r\n\r\n    params.all = q.select(e => e.value.map(ee => [ee[2], ee[3]])).toArray();\r\n    params.allLabel = q.select(e => e.value.map(ee => [ee[0], ee[1]])).toArray();\r\n\r\n    // process result\r\n\r\n    let result = params.result;\r\n    params.result = result.map(e => [e[2], e[3]]);\r\n    params.resultLabel = result.map(e => [e[0], e[1]]);\r\n\r\n    params.isMetal = isMetal(params.pLesser);\r\n    params.yAxisLabel = \"\\\\(\" + p1Arr_raw[params.p1Lesser + 1] +\r\n        \"-\" + p1Arr_raw[params.p1Lesser] + \"\\\\ (\\\\mathrm{eV})\\\\)\";\r\n    params.xAxisLabel = \"\\\\((\" + p1Arr_raw[params.p1Lesser + 1] +\r\n        \"+\" + p1Arr_raw[params.p1Lesser] + \")/2\\\\ (\\\\mathrm{eV})\\\\)\";\r\n\r\n\r\n    // select g.OrderBy(elem => elem[0]);\r\n    // note that average energy may not increase monotonously as n in (n,m) increases.\r\n    // thus elem => elem[2] is wrong.\r\n    // test: S11 = 1.420, S22 = 2.134 as (6,4), see branch 2n + m = 16\r\n\r\n\r\n    return params;\r\n}\r\n","\r\n'use strict';\r\n\r\nfunction drawPlot(placeholder, params) {\r\n\r\n    let defaultRadius = 4, xMin = params.point[0] - 0.5, xMax = params.point[0] + 0.5;\r\n    let yMin = params.isMetal ? -0.01 : params.point[1] - 0.4, yMax = params.isMetal ? 0.45 : params.point[1] + 0.4;\r\n    let font = {\r\n        size: 20,\r\n        lineHeight: 20,\r\n        family: \"serif\"\r\n    };\r\n    let options = {\r\n        xaxis: {\r\n            // aver\r\n            show: true,\r\n            position: \"bottom\",\r\n            min: xMin,\r\n            max: xMax,\r\n            font: font,\r\n            tickLength: 10,\r\n            tickColor: \"rgb(255, 0, 0)\",\r\n            color: \"rgb(255, 0, 0)\"\r\n        },\r\n        yaxis: {\r\n            show: true,\r\n            min: yMin,\r\n            max: yMax,\r\n            font: font,\r\n            tickLength: 10,\r\n            tickColor: \"rgb(0, 0, 0)\",\r\n            color: \"rgb(0, 0, 0)\"\r\n        },\r\n        series: {\r\n            hoverable: true\r\n            // shadowSize: 0\r\n        },\r\n        grid: {\r\n            borderColor: {\r\n                top: \"rgb(0, 0, 255)\",\r\n                bottom: \"rgb(255, 0, 0)\",\r\n                left: \"rgb(0, 0, 0)\",\r\n                right: \"rgb(0, 0, 0)\"\r\n            },\r\n            hoverable: true,\r\n            minBorderMargin: 0\r\n        }\r\n    };\r\n\r\n    let series = [];\r\n    for (let i = 0; i < params.rbm.length; i++)\r\n        series.push({\r\n            color: \"rgb(208, 208, 208)\", // use the shadow\r\n            data: params.rbm[i],\r\n            shadowSize: 5,\r\n            hoverable: false\r\n        });\r\n    let laser = [1240 / 785, 1240 / 633, 1240 / 532];\r\n    let laser_color = [\"rgb(136, 136, 136)\", \"rgb(245, 0, 0)\", \"rgb(12, 127, 15)\"];\r\n\r\n    for (let i = 0; i < laser.length; i++) {\r\n        series = series.concat([{\r\n            id: \"laser\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, 2 * (-10 - laser[i])], [10, 2 * (10 - laser[i])]],\r\n            shadowSize: 0\r\n        }, {\r\n            id: \"laser_minus\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, -2 * (-10 - laser[i])], [10, -2 * (10 - laser[i])]],\r\n            shadowSize: 0\r\n        }, {\r\n            fillBetween: \"laser\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, 2 * (-10 - (laser[i] - 0.1))], [10, 2 * (10 - (laser[i] - 0.1))]], // 100 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }, {\r\n            fillBetween: \"laser_minus\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, -2 * (-10 - (laser[i] - 0.1))], [10, -2 * (10 - (laser[i] - 0.1))]], // 100 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }, {\r\n            fillBetween: \"laser\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, 2 * (-10 - (laser[i] + 0.1))], [10, 2 * (10 - (laser[i] + 0.1))]], // 200 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }, {\r\n            fillBetween: \"laser_minus\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, -2 * (-10 - (laser[i] + 0.1))], [10, -2 * (10 - (laser[i] + 0.1))]], // 200 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }]);\r\n    }\r\n\r\n    for (let i = 0; i < params.all.length; i++) {\r\n        let mod_i = (params.allLabel[i][0][0] * 2 + params.allLabel[i][0][1]) % 3;\r\n        series.push({\r\n            color: params.isMetal || mod_i === 2 ? \"rgb(0, 0, 0)\" : \"rgb(255, 0, 0)\",\r\n            data: params.all[i],\r\n            points: {\r\n                show: true,\r\n                radius: params.isMetal ? 78 / 0.1 * 0.015 / 2  : defaultRadius, //15 meV\r\n                symbol: params.isMetal ? \"circle\" : mod_i === 2 ? \"square\" : \"triangle\"\r\n            },\r\n            lines: {\r\n                show: true\r\n            },\r\n            point_labels: params.allLabel[i],\r\n            hoverable: true\r\n        });\r\n    }\r\n    for (let i = 0; i < params.result.length; i++) {\r\n        let mod_i = (params.resultLabel[i][0] * 2 + params.resultLabel[i][1]) % 3;\r\n        series.push({\r\n            color: params.isMetal || mod_i === 2 ? \"rgb(0, 0, 0)\" : \"rgb(255, 0, 0)\",\r\n            data: [params.result[i]],\r\n            points: {\r\n                show: true,\r\n                radius: params.isMetal ? 78 / 0.1 * 0.015 / 2 : defaultRadius,\r\n                symbol: params.isMetal ? \"circle\" : mod_i === 2 ? \"square\" : \"triangle\",\r\n                fill: true,\r\n                fillColor: params.isMetal || mod_i === 2 ? \"rgb(0, 0, 0)\" : \"rgb(255, 0, 0)\"\r\n            },\r\n            point_labels: [params.resultLabel[i]],\r\n            hoverable: true\r\n        });\r\n    }\r\n\r\n\r\n    // blue point is diamond, otherwise square\r\n    if (params.pointType !== \"none\") {\r\n        series.push({\r\n            color: params.pointType === \"green\" ? \"rgb(12, 180, 15)\" : \"rgb(255, 0, 0)\",\r\n            data: [params.point],\r\n            points: {\r\n                show: true,\r\n                symbol: params.pointType === \"green\" ? \"diamond\" : \"square\",\r\n                radius: defaultRadius,\r\n                fill: true,\r\n                fillColor: params.pointType === \"green\" ? \"rgba(0, 0, 0, 0)\" : \"rgb(255, 0, 0)\"\r\n            },\r\n            hoverable: false\r\n        });\r\n    }\r\n    if (params.bluePoint !== null)\r\n        series.push({\r\n            color: \"rgb(0, 0, 255)\",\r\n            data: [params.bluePoint],\r\n            points: {\r\n                show: true,\r\n                symbol: \"diamond\",\r\n                radius: defaultRadius,\r\n                fill: true,\r\n                fillColor: \"rgba(0, 0, 0, 0)\"\r\n            },\r\n            hoverable: false,\r\n            shadowSize: 0\r\n        });\r\n\r\n    let $placeholder = $(\"#\" + placeholder);\r\n    let plot = $.plot($placeholder, series, options);\r\n\r\n    let previousPoint = null;\r\n    $placeholder.bind(\"plothover\", function(event, pos, item) {\r\n        if (item) {\r\n            if (previousPoint !== item.dataIndex) {\r\n                previousPoint = item.dataIndex;\r\n                $(\"#tooltip\").remove();\r\n                showTooltip(item.pageX, item.pageY,\r\n                    \"(\" + item.series.point_labels[item.dataIndex][0] + \", \" +\r\n                    item.series.point_labels[item.dataIndex][1] + \")\");\r\n            }\r\n        } else {\r\n            $(\"#tooltip\").remove();\r\n            previousPoint = null;\r\n        }\r\n    });\r\n\r\n    if (params.isMetal) {\r\n        for (let i = 0; i < params.all.length; i++) {\r\n            let s = Math.floor(params.all.length / 2);\r\n            let p = params.all[i][params.all[i].length - 1];\r\n            let p1 = params.allLabel[i][params.all[i].length - 1];\r\n            let o = plot.pointOffset({ x: p[0], y: p[1] });\r\n            let axes = plot.getAxes();\r\n            let xaxis = axes.xaxis, yaxis = axes.yaxis;\r\n            if (i % 2 === s % 2 && p[0] <= xaxis.max && p[0] >= xaxis.min &&\r\n                p[1] <= yaxis.max - 0.05 && p[1] >= yaxis.min + 0.05)\r\n                $placeholder.append(`\r\n                    <div class='series_label' style='left: ${o.left - (i === s ? 60 : 10)}px; top: ${o.top - 30}px;'>\r\n                        <p>${i === s ? \"2<i>n</i>+<i>m</i>=\" : \"\"}${p1[0] * 2 + p1[1]}</p>\r\n                    </div>\r\n                `);\r\n        }\r\n    } else {\r\n        let mid = Math.round(params.all.length / 2);\r\n        let pMid = params.allLabel[mid][params.all[mid].length - 1];\r\n        let divMid = Math.floor((pMid[0] * 2 + pMid[1]) / 3); //use ceil, for right is scattered, left is dense\r\n\r\n        for (let i = 0; i < params.all.length; i++) {\r\n            let p = params.all[i][params.all[i].length - 1];\r\n            let p1 = params.allLabel[i][params.all[i].length - 1];\r\n            let o = plot.pointOffset({ x: p[0], y: p[1] });\r\n            let axes = plot.getAxes();\r\n            let xaxis = axes.xaxis, yaxis = axes.yaxis;\r\n            let div = Math.round((p1[0] * 2 + p1[1]) / 3);\r\n            let mod = (p1[0] * 2 + p1[1]) % 3;\r\n            if (divMid % 2 === div % 2) {\r\n                if (p[0] <= xaxis.max - 0.02 && p[0] >= xaxis.min + 0.02 && p[1] <= yaxis.max - 0.1 &&\r\n                    p[1] >= yaxis.min + 0.1) {\r\n                    let dA = {\r\n                        color: mod === 1 ? \"#FF0000\" : \"#000000\",\r\n                        left: o.left - (divMid === div ? 60 : 10),\r\n                        top: o.top - (mod === 1 ? -15 : (\r\n                            divMid === div && p[1] <= yaxis.max - 0.15 && p[1] >= yaxis.min + 0.18 ? 60 : 30\r\n                            )\r\n                        ),\r\n                        c1: divMid === div\r\n                            ? (\r\n                                (mod === 2 && p[1] <= yaxis.max - 0.15\r\n                                    ? \"<b>MOD2</b><br/>\"\r\n                                    : \"\")\r\n                                + \"2<i>n</i>+<i>m</i>=\"\r\n                            )\r\n                            : \"\",\r\n                        c2: p1[0] * 2 + p1[1],\r\n                        c3: divMid === div && mod === 1 && p[1] >= yaxis.min + 0.12\r\n                            ? \"<br/><b>MOD1</b>\"\r\n                            : \"\"\r\n                    };\r\n                    $placeholder.append(`\r\n                        <div class='series_label' style='color: ${dA.color}; left: ${dA.left}px; top: ${dA.top}px;'>\r\n                            <p>${dA.c1}${dA.c2}${dA.c3}</p>\r\n                        </div>\r\n                    `);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < params.rbm.length; i++) {\r\n        if (i % 2 === 0 || params.rbm.length === 1) {\r\n            let o1 = plot.pointOffset({ x: params.rbmPos[i], y: yMax });\r\n            $placeholder.append(`\r\n                <div class='rbm_label' style='left: ${o1.left - 15}px; top: ${o1.top - 30}px;'>\r\n                    <p>${params.rbmLabel[i]}</p>\r\n                </div>\r\n            `);\r\n        }\r\n    }\r\n}\r\n\r\nfunction showTooltip(x, y, contents) {\r\n    $(`\r\n        <div id='tooltip' class='tooltip right in'>\r\n            <div class='tooltip-arrow' style='top: 50%;'></div>\r\n            <div class='tooltip-inner'>${contents}</div>\r\n        </div>\r\n    `)\r\n        .css({\r\n            display: \"block\",\r\n            top: y,\r\n            left: x\r\n        }).appendTo(\"body\").fadeIn(200);\r\n}\r\n\r\n","\r\n'use strict';\r\n\r\nlet timeLoad = performance.now(); // before load\r\nlet timeStartup;\r\n\r\n$.getScript(navigator.language.substr(0, 2).toLowerCase() !== \"zh\"\r\n    ? \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/MathJax.js\"\r\n    : \"https://cdn.bootcss.com/mathjax/2.7.3/MathJax.js\"\r\n    + \"?config=TeX-AMS_SVG-full,Safe&locale=en\", function () {\r\n    timeStartup = performance.now();\r\n    console.log(\"MathJax load takes \" + (timeStartup - timeLoad).toFixed(2));\r\n});\r\n\r\nlet urlParams = {};\r\n(window.onpopstate = function () {\r\n    let match,\r\n        pl     = /\\+/g,  // Regex for replacing addition symbol with a space\r\n        search = /([^&=]+)=?([^&]*)/g,\r\n        decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); },\r\n        query  = window.location.search.substring(1);\r\n\r\n    urlParams = {};\r\n    while (match = search.exec(query))\r\n        urlParams[decode(match[1])] = decode(match[2]);\r\n})();\r\n\r\nif( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {\r\n    $('.selectpicker').selectpicker('mobile');\r\n}\r\n\r\nlet $body = $(\"body\");\r\n\r\nif ($body.hasClass(\"Step1\")) {\r\n\r\n  let $selectType = $(\"#slType\");\r\n  for (let i = 0; i < typeArr.length; i++)\r\n    $selectType.append(`<option value=\"${i}\">${typeArr[i]}</option>`);\r\n\r\n  $selectType.selectpicker('val', 0)\r\n    .selectpicker('refresh')\r\n    .on(\"loaded.bs.select\", clearTitle)\r\n    .on('changed.bs.select', clearTitle);\r\n\r\n} else if ($body.hasClass(\"Step2\")) {\r\n\r\n  let type = parseInt(urlParams['Type']);\r\n  if (isNaN(type) || type > 5 || type < 0)\r\n    location.href = \"Step1.html\";\r\n\r\n  $(\"#title\")[0].innerHTML += '<small>' + typeArr[type] + '</small>';\r\n  $(\"#dataTables\").find(\"table\")[type].style.display = \"\";\r\n\r\n  let $selectP1 = $(\"#slP1\"), $selectP2 = $(\"#slP2\"), $selectType = $(\"#slType\");\r\n  let $selectP1P2 = $(\"#slP1, #slP2\");\r\n\r\n  // generate options\r\n\r\n  for (let i = 0; i < p1Arr.length; i++) {\r\n    if (type >= 3) {\r\n      let threshold = (type === 3 ? 8 : 2);\r\n      if (i >= threshold) break;\r\n    }\r\n    $selectP1P2.append(`<option value=\"${i}\">${p1Arr[i]}</option>`);\r\n  }\r\n  for (let i = 0; i < typeArr.length; i++)\r\n    $selectType.append(`<option value=\"${i}\">${typeArr[i]}</option>`);\r\n\r\n  $selectType.selectpicker('val', type);\r\n  $(\".selectpicker\").selectpicker('refresh');\r\n\r\n  $(\"select\").on(\"loaded.bs.select\", clearTitle);\r\n  $selectP1.on('changed.bs.select', function (e, index) {\r\n    let i = index - 1;\r\n    clearTitle(); // only when slP1 changes the title have to be cleared; only active select\r\n    $selectP2.find(\"option\").each(function () {\r\n      let value = parseInt($(this).val());\r\n      if (i % 2 === 0 && value === i + 1 || i % 2 === 1 && value === i - 1)\r\n        $selectP2.selectpicker('val', value);\r\n    });\r\n  });\r\n\r\n} else if ($body.hasClass(\"Step3\")) {\r\n\r\n  // check integrity\r\n  for (let i of ['Type', 'P1', 'P2', 'Val1', 'Val2', 'RBM']) {\r\n    if (urlParams[i] === undefined) {\r\n      location.href = 'Step1.html';\r\n      break;\r\n    }\r\n  }\r\n\r\n  let params = {\r\n    type: parseInt(urlParams['Type']), // int\r\n    p1: parseInt(urlParams['P1']), // int\r\n    p2: parseInt(urlParams['P2']), // int\r\n    val1: urlParams['Val1'], // empty-able str\r\n    val2: urlParams['Val2'], // empty-able str\r\n    rbm: urlParams['RBM'] // empty-able str\r\n  };\r\n\r\n  let valueBetween = (xy, a, b) => (xy >= a || xy <= b);\r\n  let val1_ = parseFloat(params.val1), val2_ = parseFloat(params.val2), rbm_ = parseFloat(params.rbm);\r\n  let emptyNum = Number(isNaN(val1_)) + Number(isNaN(val2_)) + Number(isNaN(rbm_));\r\n  if (emptyNum >= 2 || isNaN(params.type) || isNaN(params.p1) || isNaN(params.p2) ||\r\n    !isNaN(val1_) && (val1_ < 0 || val1_ > 4) || !isNaN(val2_) && (val2_ < 0 || val2_ > 4) ||\r\n    !isNaN(rbm_) && (rbm_ < 30 || rbm_ > 500) || !valueBetween(params.type, 0, 5) ||\r\n    !valueBetween(params.p1, 0, 11) || !valueBetween(params.p2, 0, 11)\r\n  )\r\n    location.href = 'Step1.html';\r\n\r\n  // end validation\r\n\r\n  $(\"#title\")[0].innerHTML += '<small>' + typeArr[params.type] + '</small>';\r\n\r\n  let plotParams = processOutput(getPlotParams(params));\r\n\r\n  $(\"#resultDiv\")\r\n    .addClass(plotParams.ar !== AssignResult.error ? \"alert-success\" : \"alert-danger\")\r\n    .html(plotParams.resultString);\r\n  $(\"#yAxisLabel\").html(plotParams.yAxisLabel);\r\n  $(\"#xAxisLabel\").html(plotParams.xAxisLabel);\r\n  $(\"#\" + plotParams.pointType + \"Legend\").css(\"display\", \"\");\r\n  if (plotParams.bluePoint !== null)\r\n    $(\"#blueLegend\").css(\"display\", \"\");\r\n\r\n  $(drawPlot(\"plot-placeholder\", plotParams));\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction clearTitle() { // used in Step1 and Step2\r\n\r\n    $(\".bootstrap-select\").find(\"button\").removeAttr(\"title\");\r\n}\r\n\r\nfunction validate(form) { // used in Step2\r\n\r\n    let $hint = $(\"#hint\");\r\n    let invokeError = (msg) => {\r\n        $hint.addClass(\"alert-danger\")\r\n            .html(\"<span class=\\\"glyphicon glyphicon-exclamation-sign\\\" \" +\r\n                \"aria-hidden=\\\"true\\\"></span> \" + msg);\r\n        return false;\r\n    };\r\n    let val1_ = parseInt(form.Val1.value);\r\n    let val2_ = parseInt(form.Val2.value);\r\n    let rbm_ = parseInt(form.RBM.value);\r\n    let emptyNum = Number(isNaN(val1_)) + Number(isNaN(val2_)) + Number(isNaN(rbm_));\r\n    if (emptyNum >= 2) return invokeError(\"At least 2 values are required.\");\r\n    else {\r\n        if (!isNaN(val1_) && (val1_ < 0 || val1_ > 4) ||\r\n            !isNaN(val2_) && (val2_ < 0 || val2_ > 4) ||\r\n            !isNaN(rbm_) && (rbm_ < 30 || rbm_ > 500))\r\n            return invokeError(\"Please input valid value.\");\r\n        if ($(\"#slP1\").selectpicker(\"val\") === \"\")\r\n            return invokeError(\"Please select the type of transition energy.\");\r\n\r\n        $(\".selectpicker\").removeAttr(\"disabled\");\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction changeEdit(mainP1, val1, val2) { // used in Step2\r\n\r\n    $(\"#slP1\").selectpicker('val', mainP1);\r\n    $(\"#slP2\").selectpicker('val', mainP1 + 1);\r\n    $(\"#edVal1\").val(val1);\r\n    $(\"#edVal2\").val(val2);\r\n}\r\n\r\nfunction calculate(form) { // used in Step2\r\n\r\n    let n = parseInt(form.NCalc.value), m = parseInt(form.MCalc.value), t = parseInt(urlParams['Type']);\r\n    if (n < m) [n, m] = [m, n];\r\n    if (isNaN(n) || isNaN(m) || n <= 6 || m <= 0) return;\r\n\r\n    let $result = $(\"<tbody></tbody>\");\r\n    $result.append(`<tr><td>\\\\(d_t\\\\)</td><td>\\\\( ${Dt(n, m, t).toFixed(3).toString()} \\\\ \\\\mathrm{nm}\\\\)</td></tr>`);\r\n\r\n\r\n    let isAirSuspended = (t === 0);\r\n    let editRBM = (e) => $('#edRBM').val(e);\r\n    if (isAirSuspended) {\r\n\r\n        let rbmAS = dt2RBM(Dt(n, m, t), isMetal(n, m) ? 2 : 0, t).toFixed(1).toString();\r\n\r\n        $result.append(\r\n            $(`\r\n                <tr>\r\n                    <td>\\\\(\\\\omega_\\\\mathrm{RBM}\\\\ ${isMetal(n, m) ? \"(p=3)\" : \"(p=1,2)\"} \\\\)</td>\r\n                    <td>\\\\( ${rbmAS} \\\\ \\\\mathrm{cm^{-1}}\\\\)</td>\r\n                </tr>\r\n            `)\r\n                .click(() => editRBM(rbmAS))\r\n                .css(\"cursor\", \"pointer\")\r\n        );\r\n    }\r\n\r\n    let rbmGeneral = dt2RBM(Dt(n, m, t), isAirSuspended ? 3 : 0, t).toFixed(1).toString();\r\n    $result.append(\r\n        $(`\r\n            <tr>\r\n                <td>\\\\(\\\\omega_\\\\mathrm{RBM}\\\\ ${isAirSuspended ? \"(p>3)\" : \"\"} \\\\)</td>\r\n                <td>\\\\( ${rbmGeneral} \\\\ \\\\mathrm{cm^{-1}}\\\\)</td>\r\n            </tr>\r\n        `)\r\n            .click(() => editRBM(rbmGeneral))\r\n            .css(\"cursor\", \"pointer\")\r\n    );\r\n\r\n\r\n    let keyArr = [];\r\n    let valArr = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        try {\r\n            if (isMetal(p1ToP[i]) !== isMetal(n, m))\r\n                continue;\r\n            let val = getEnergy(Dt(n, m, t), Theta(n, m), p1ToP[i], t, isMetal(n, m) ? i % 2 - 1 : Mod(n, m))\r\n                .toFixed(3).toString();\r\n            keyArr.push(i);\r\n            valArr.push(val);\r\n        } catch (err) {\r\n            // pass\r\n        }\r\n    }\r\n    for (let i = 0; i < keyArr.length; i++) {\r\n        let i1 = (i % 2 === 0 ? i : i - 1);\r\n\r\n        $result.append(\r\n            $(`<tr><td>${p1Arr[keyArr[i]]}</td><td>\\\\(${valArr[i]}\\\\ \\\\mathrm{eV}\\\\)</td></tr>`)\r\n                .click(() => changeEdit(keyArr[i1], valArr[i1], valArr[i1 + 1]))\r\n                .css(\"cursor\", \"pointer\")\r\n        );\r\n    }\r\n\r\n    let $calcResult = $(\"#calcResult\");\r\n    $calcResult.html(\r\n        $(\"<table class=\\\"table table-striped math\\\" id=\\\"calcResultList\\\"></table>\").append($result)\r\n    );\r\n\r\n    for (let i = 0; i < keyArr.length; i += 2) {\r\n        let params = {\r\n            type: t, // int\r\n            p1: keyArr[i], // int\r\n            p2: keyArr[i + 1], // int\r\n            val1: valArr[i], // empty-able str\r\n            val2: valArr[i + 1], // empty-able str\r\n            rbm: \"\" // empty-able str\r\n        };\r\n        let plotParams = processOutput(getPlotParams(params));\r\n        let plotId = \"calcPlot\" + Math.round(i / 2);\r\n        let containerId = \"calcPlotContainer\" + Math.round(i / 2);\r\n\r\n\r\n        let $container = $(\"#containerTemplate\").clone();\r\n        $container.css(\"display\", \"\").attr(\"id\", containerId);\r\n        $container.find(\"#plotPlaceholder\").attr(\"id\", plotId);\r\n        $calcResult.append($container);\r\n        $container.find(\".yAxisLabel\").html(plotParams.yAxisLabel);\r\n        $container.find(\".xAxisLabel\").html(plotParams.xAxisLabel);\r\n        $container.find(\".rbmAxisLabel\").html(\"\\\\(\\\\omega_{\\\\mathrm{RBM}}\\\\ (\\\\mathrm{cm^{-1}})\\\\)\");\r\n        drawPlot(plotId, plotParams);\r\n    }\r\n\r\n    MathJax.Hub.Queue(['Typeset', MathJax.Hub]);\r\n    return false;\r\n}\r\n"]}