{"version":3,"sources":["Energy.js","Assign.js","Plot.js","main.js"],"names":["getRBMParameters","p","type","Param","a","b","this","Error","wRBM2Dt","wRBM","ab","dt2RBM","dt","getEnergyFromCos3Theta","cos3Theta","mod","r","isMetal","derivative","paramType0","c","sgE","extMod","Math","log10","betaP","getCos3Theta","val","calc","toFixed","getAverage","splitting","pLesser","pLarger","err","message","delta","x","getList","li","nMin","nMax","n","m","seriesThreshold","dl","getEnergy","Dt","Theta","dh","push","Mod","getRBMArray","d","rbmLabel","rbm","cos3ThetaMax","wRBMMin","wRBMMax","t","plus","minus","getPlotParams","params","decimalDigits","split","length","isNumber","val1","val2","uncertainty","pow","E1R1","min","E2","p1","p2","p1ToP","parseFloat","cos","resultString","error","Assign","bluePoint","point","pToLesser","pointType","p1Lesser","p1ToLesser","pAnother","modAnother","p1Arr","valAnother","_ref","_ref2","y","p_1","p_2","_ref3","_ref4","_ref5","average","setBounds","dxMin_","dxMax_","dyMin_","dyMax_","dxMin","dxMax","dyMin","dyMax","processOutput","result","query","orderBy","Dist_","toArray","i","round","arguments","undefined","Dist","x1","y1","x2","y2","sqrt","e","deltaX","maxY","minY","all","Enumerable","from","where","uc","ar","AssignResult","count","accurate","union","possible","tmp","impossible","yMax","xMin","xMax","s","rbmPos","between","xy","r1","r2","u","q","groupBy","key","group","value","select","map","ee","allLabel","resultLabel","yAxisLabel","p1Arr_raw","xAxisLabel","drawPlot","placeholder","defaultRadius","yMin","font","size","lineHeight","family","options","xaxis","show","position","max","tickLength","tickColor","color","yaxis","series","hoverable","grid","borderColor","top","bottom","left","right","minBorderMargin","data","shadowSize","laser","laser_color","concat","id","toString","fillBetween","lines","fill","lineWidth","mod_i","points","radius","symbol","point_labels","fillColor","$placeholder","$","plot","previousPoint","bind","event","pos","item","dataIndex","remove","showTooltip","pageX","pageY","floor","o","pointOffset","axes","getAxes","append","mid","pMid","divMid","div","dA","c1","c2","c3","o1","contents","css","display","appendTo","fadeIn","clearTitle","find","removeAttr","validate","form","$hint","invokeError","msg","addClass","html","val1_","Val1","val2_","Val2","rbm_","parseInt","RBM","emptyNum","Number","isNaN","selectpicker","changeEdit","p1_lesser","calculate","$calcHint","$calcResult","NCalc","MCalc","urlParams","$resultList","$plotList","generateRBMCalculationResult","calculatedEnergy","Array","validResultNumber","_loop","click","plotParams","plotId","$plot","MathJax","Hub","Queue","isAirSuspended","editRBM","rbmAS","rbmGeneral","typeArr","PI","atan","isMetalP","isMetalNM","theta","timeLoad","performance","now","timeStartup","getScript","navigator","language","substr","toLowerCase","console","log","window","onpopstate","match","pl","search","decode","decodeURIComponent","replace","location","substring","exec","test","userAgent","$body","hasClass","$selectType","on","href","innerHTML","removeClass","$selectP1","$selectP2","$selectP1P2","threshold","index","each","_arr","_i3","valueBetween"],"mappings":"AACA,YA0DA,SAASA,kBAAiBC,EAAGC,GACzB,QAASC,GAAMC,EAAGC,GAAKC,KAAKF,EAAIA,EAAGE,KAAKD,EAAIA,EAC5C,OAAQH,GACJ,IAAK,GAAG,OAAQD,GACR,IAAK,GAAG,IAAK,GAAG,MAAO,IAAIE,GAAM,IAAK,GACtC,KAAK,GAAG,MAAO,IAAIA,GAAM,IAAK,GAC9B,SAAS,MAAO,IAAIA,GAAM,IAAK,GAEvC,IAAK,GAAG,MAAO,IAAIA,GAAM,MAAO,IAChC,KAAK,GAAG,MAAO,IAAIA,GAAM,MAAO,KAChC,KAAK,GAAG,MAAO,IAAIA,GAAM,IAAO,GAChC,KAAK,GAAG,MAAO,IAAIA,GAAM,MAAO,KAChC,KAAK,GAAG,MAAO,IAAIA,GAAM,IAAK,KAC9B,SAAS,KAAM,IAAII,OAAM,iBAIjC,QAASC,SAAQC,EAAMR,EAAGC,GACtB,GAAIQ,GAAKV,iBAAiBC,EAAGC,EAC7B,OAAOQ,GAAGN,GAAKK,EAAOC,EAAGL,GAG7B,QAASM,QAAOC,EAAIX,EAAGC,GACnB,GAAIQ,GAAKV,iBAAiBC,EAAGC,EAC7B,OAAOQ,GAAGN,EAAIQ,EAAKF,EAAGL,EAK1B,QAASQ,wBAAuBD,EAAIE,EAAWb,EAAGC,EAAMa,GAEpD,GAAIC,GAAAA,MACJ,IAAIC,QAAQhB,IAAMc,EAAM,EACpB,KAAM,IAAIR,OAAM,qCACpB,IAAIL,GAAQ,EAAG,CAEX,GAAID,GAAK,EACL,KAAM,IAAIM,OAAM,gCACpB,IAAIW,IAAcC,WAAWlB,GAAG,IAAMW,EAAKA,GAAM,EAAIO,WAAWlB,GAAG,IAAMW,EAAKA,EAAKA,EACnF,IAAIM,EAAa,EACb,KAAM,IAAIX,OAAM,KAEhBS,GADAC,QAAQhB,GACJkB,WAAWlB,GAAG,GAAKW,EAAKO,WAAWlB,GAAG,IAAMW,EAAKA,GAAMO,WAAWlB,GAAG,IAAMW,EAAKA,GAAME,GAAmB,EAANC,EAAU,GAG7GI,WAAWlB,GAAG,GAAKW,EAAKO,WAAWlB,GAAG,IAAMW,EAAKA,GACjDO,WAAWlB,GAAG,IAAMW,EAAKA,GAAME,GAAeb,EAAI,IAAQc,EAAM,KAAW,GACnFC,GAAe,IAATd,EAAc,IAAkB,IAATA,EAAc,GAAM,MAE9C,IAAa,IAATA,EAAY,CAEnB,GAAID,GAAK,EACL,KAAM,IAAIM,OAAM,iDACpB,IAAIH,GAAI,MAAOC,EAAI,KAAOe,EAAI,KAC1BC,EAAM,SAACC,GAAD,MAAYlB,IAAKH,EAAI,GAAKW,GAAM,EAAIP,EAAIkB,KAAKC,MAAMJ,IAAMnB,EAAI,GAAKW,KACtEa,MAAMxB,GAAGqB,IAAWV,EAAKA,GAAME,GAC7Bb,EAAI,EAAK,MAASA,EAAI,GAAKW,EAAK,GAEpCI,GAAIK,EADJJ,QAAQhB,GACAc,EAAM,EAENA,EAAM,OAEf,CAAA,GAAa,IAATb,GAAuB,IAATA,EAUlB,KAAM,IAAIK,OAAM,eARnB,IAAU,IAANN,EACAe,EAAI,GAAK,KAAS,MAASJ,IAAgB,IAARG,EAAa,iBAAuBH,EAAKA,GAAME,MACjF,CAAA,GAAU,IAANb,EAGL,KAAM,IAAIM,OAAM,sEAFhBS,GAAI,GAAK,MAAS,MAASJ,IAAgB,IAARG,SAAuB,QAAWH,EAAKA,GAAME,EAGpFE,GAAe,IAATd,EAAc,IAAO,EAI/B,MAAOc,GAGX,QAASU,cAAaC,EAAKf,EAAIX,EAAGC,GAI9B,GAAIc,UAEJ,IAAId,GAAQ,EAAG,CAEX,GAAID,GAAK,EACL,KAAM,IAAIM,OAAM,gCACpBoB,IAAiB,IAATzB,EAAc,IAAkB,IAATA,EAAc,GAAM,EAC/Ce,QAAQhB,IACRe,EAAE,IAAMG,WAAWlB,GAAG,GAAKW,EAAKO,WAAWlB,GAAG,IAAMW,EAAKA,GAAMe,GAAOR,WAAWlB,GAAG,IAAMW,EAAKA,GAC/FI,EAAE,KAAQG,WAAWlB,GAAG,GAAKW,EAAKO,WAAWlB,GAAG,IAAMW,EAAKA,GAAMe,GAAQR,WAAWlB,GAAG,IAAMW,EAAKA,KAElGI,EAAE,KAAQG,WAAWlB,GAAG,GAAKW,EAAKO,WAAWlB,GAAG,IAAMW,EAAKA,GAAMe,GAC3DR,WAAWlB,GAAG,IAAMW,EAAKA,IAASX,EAAI,IAAQ,KAAe,GACnEe,EAAE,KAAQG,WAAWlB,GAAG,GAAKW,EAAKO,WAAWlB,GAAG,IAAMW,EAAKA,GAAMe,GAC3DR,WAAWlB,GAAG,IAAMW,EAAKA,IAASX,EAAI,IAAQ,KAAe,QAGpE,IAAa,IAATC,EAAY,CAEnB,GAAID,GAAK,EACL,KAAM,IAAIM,OAAM,iDACpB,IAAIH,GAAI,MAAOC,EAAI,KAAOe,EAAI,KAC1BQ,EAAO,SAACN,GAAD,OAAaK,EAAMvB,GAAKH,EAAI,GAAKW,GAAM,EAAIP,EAAIkB,KAAKC,MAAMJ,IAAMnB,EAAI,GAAKW,MAC9EX,EAAI,EAAK,MAASA,EAAI,GAAKW,EAAK,IAAMa,MAAMxB,GAAGqB,IAAWV,EAAKA,GACrEI,GAAE,GAAKY,EAAK,GACZZ,EAAE,GAAKY,EAAK,OAET,CAAA,GAAa,IAAT1B,GAAuB,IAATA,EAWlB,KAAM,IAAIK,OAAM,eARnB,IADAoB,GAAiB,IAATzB,EAAc,IAAO,EACnB,IAAND,EACAe,EAAE,IAAMW,EAAM,GAAK,KAAS,MAASf,IAAO,QAAWA,EAAKA,GAC5DI,EAAE,IAAMW,EAAM,GAAK,KAAS,MAASf,aAAqBA,EAAKA,OAC5D,CAAA,GAAU,IAANX,EAGJ,KAAM,IAAIM,OAAM,8DAFnBS,GAAE,IAAMW,EAAM,GAAK,MAAS,MAASf,YAAoBA,EAAKA,GAC9DI,EAAE,IAAMW,EAAM,GAAK,MAAS,MAASf,IAAO,OAAUA,EAAKA,IAWnE,MANAI,GAAE,GAAKA,EAAE,GAAGa,QAAQ,GACpBb,EAAE,GAAKA,EAAE,GAAGa,QAAQ,IAChBb,EAAE,GAAK,GAAKA,EAAE,GAAK,KACnBA,EAAE,QACFA,EAAE,GAAK,GAAKA,EAAE,GAAK,KACnBA,EAAE,OACCA,EAIX,QAASc,YAAWC,EAAWtB,EAAMuB,EAAS9B,GAI1C,GAAIU,GAAKJ,QAAQC,EAAMuB,EAAS9B,EAEhC,IAAIe,QAAQe,EAAU,GAAI,KAAM,IAAIzB,OAAM,8BAC1C,MAAIL,GAAQ,GA0CL,CAAA,GAAa,IAATA,EAAY,CACnB,GAAIE,GAAI,MAAOC,EAAI,KAAOe,EAAI,KAC1BC,EAAM,SAACpB,GAAD,MAAOG,IAAKH,EAAI,GAAKW,GAAM,EAAIP,EAAIkB,KAAKC,MAAMJ,IAAMnB,EAAI,GAAKW,MACjEX,EAAI,EAAK,MAASA,EAAI,GAAKW,EAAK,GAEtC,IAAIK,QAAQe,GAAU,CAElB,GAAIlB,GAAaiB,EAAanB,EAAKA,GAAMa,MAAMO,GAAS,GAAKP,MAAMO,GAAS,GAC5E,OAAIlB,GAAY,GAAKA,EAAY,EACtB,MAEPD,uBAAuBD,EAAIE,EAAWkB,EAAS9B,MAC/CW,uBAAuBD,EAAIE,EAAWkB,EAAS9B,EAAM,IACrD,EAIJ,GAAI+B,GAAUD,EAAU,EACpBjB,EAAM,CACV,IAAIiB,GAAW,EACX,KAAM,IAAIzB,OAAM,iDACpB,IAAIO,IAAaiB,EAAYV,EAAIW,GAAWX,EAAIY,IAAYrB,EAAKA,GAC7Da,MAAMQ,GAASlB,EAAM,GAAKU,MAAMO,GAASjB,EAAM,GAOnD,QALID,EAAY,GAAKA,EAAY,KAC7BC,EAAM,EACND,GAAaiB,EAAYV,EAAIW,GAAWX,EAAIY,IAAYrB,EAAKA,GACzDa,MAAMQ,GAASlB,EAAM,GAAKU,MAAMO,GAASjB,EAAM,KAEnDD,EAAY,GAAKA,EAAY,EACtB,MAEPD,uBAAuBD,EAAIE,EAAWmB,EAAS/B,EAAMa,GACrDF,uBAAuBD,EAAIE,EAAWkB,EAAS9B,EAAMa,IACrD,EAGL,GAAa,IAATb,GAAuB,IAATA,EAAY,CAEjC,GAAgB,IAAZ8B,EACA,KAAM,IAAIzB,OAAM,8DACpB,IAAIQ,GAAM,EACND,GAAaiB,GAAa,GAAK,MAAS,MAASnB,GAAM,GAAK,KAAS,MAASA,KAC5EA,EAAKA,UAAgB,OAO3B,QALIE,EAAY,GAAKA,EAAY,KAC7BC,EAAM,EACND,GAAaiB,GAAa,GAAK,MAAS,MAASnB,GAAM,GAAK,KAAS,MAASA,KACxEA,EAAKA,EADC,QAGZE,EAAY,GAAKA,EAAY,EACtB,MAGPD,uBAAuBD,EAAIE,EAAW,EAAGZ,EAAMa,GAC/CF,uBAAuBD,EAAIE,EAAW,EAAGZ,EAAMa,IAC/C,EAEH,KAAM,IAAIR,OAAM,gBAnGjB,GAAIyB,GAAW,EACX,KAAM,IAAIzB,OAAM,gCAEpB,IAAIU,QAAQe,GAAU,CAElB,GAAIlB,GAAYF,EAAKA,EAAKmB,EAAY,EAAIZ,WAAWa,GAAS,EAC9D,IAAIlB,EAAY,GAAKA,EAAY,EAAG,MAAO,KAC3C,KACI,OACID,uBAAuBD,EAAIE,EAAWkB,EAAS9B,MAC/CW,uBAAuBD,EAAIE,EAAWkB,EAAS9B,EAAM,IACrD,EACN,MAAOgC,GACL,GAAoB,OAAhBA,EAAIC,QACJ,MAAO,KACN,MAAMD,QAEZ,CACH,GAAID,GAAUD,EAAU,EACpBI,EAAQ,SAACC,GAAD,MAAOlB,YAAWc,GAASI,GAAKlB,WAAWa,GAASK,IAC5DtB,EAAM,EACND,GAAaiB,EAAYnB,EAAKA,EAAKwB,EAAM,GAAKxB,EAAKwB,EAAM,KACzDjB,WAAWc,GAAS,IAAQA,EAAU,IAAQlB,EAAM,KAAW,GAC/DI,WAAWa,GAAS,IAAQA,EAAU,IAAQjB,EAAM,KAAW,GAMnE,IAJID,EAAY,IACZC,EAAM,EACND,GAAaA,GAEbA,EAAY,EAAG,MAAO,KAC1B,KACI,OACID,uBAAuBD,EAAIE,EAAWmB,EAAS/B,EAAMa,GACrDF,uBAAuBD,EAAIE,EAAWkB,EAAS9B,EAAMa,IACrD,EACN,MAAOmB,GACL,GAAoB,OAAhBA,EAAIC,QACJ,MAAO,KACN,MAAMD,KAgE3B,QAASI,SAAQN,EAAS9B,GAEtB,GAAIqC,MACEC,EAAO,EAAGC,EAAO,EAEvB,IAAKxB,QAAQe,GAkBT,IAAK,GAAIU,GAAIF,EAAME,EAAID,EAAMC,IACzB,IAAK,GAAIC,GAAI,EAAGA,GAAKD,KAEjB,EAAIA,EAAIC,EAAIC,iBAFQD,IAGxB,IACI,GAAI1B,QAAQyB,EAAGC,GAAI,CACf,GAAIE,GAAKC,UAAUC,GAAGL,EAAGC,EAAGzC,GAAO8C,MAAMN,EAAGC,GAAIX,EAAS9B,MACrD+C,EAAKH,UAAUC,GAAGL,EAAGC,EAAGzC,GAAO8C,MAAMN,EAAGC,GAAIX,EAAS9B,EAAM,EAC/DqC,GAAGW,MAAOR,EAAGC,GAAIM,EAAKJ,GAAM,EAAII,EAAKJ,KAE3C,MAAOX,GACL,GAAoB,OAAhBA,EAAIC,QAAkB,KAAMD,OA5B5C,CACI,GAAIjB,QAAQe,EAAU,GAAI,KAAM,IAAIzB,OAAM,wDAC1C,KAAK,GAAImC,GAAIF,EAAME,EAAID,EAAMC,IACzB,IAAK,GAAIC,GAAI,EAAGA,GAAKD,KAEjB,EAAIA,EAAIC,EAAIC,iBAFQD,IAGxB,IACI,IAAK1B,QAAQyB,EAAGC,GAAI,CAChB,GAAIE,GAAKC,UAAUC,GAAGL,EAAGC,EAAGzC,GAAO8C,MAAMN,EAAGC,GAAIX,EAAS9B,EAAMiD,IAAIT,EAAGC,IAClEM,EAAKH,UAAUC,GAAGL,EAAGC,EAAGzC,GAAO8C,MAAMN,EAAGC,GAAIX,EAAU,EAAG9B,EAAMiD,IAAIT,EAAGC,GAC1EJ,GAAGW,MAAOR,EAAGC,GAAIM,EAAKJ,GAAM,EAAII,EAAKJ,KAE3C,MAAOX,GACL,GAAoB,OAAhBA,EAAIC,QAAkB,KAAMD,IAmB5C,MAAOK,GAGX,QAASa,aAAYpB,EAAS9B,GAE1B,GAAImD,IAAMC,YAAcC,QAElBC,EAAe,GACfC,EAAU,GAAIC,EAAU,GAC9B,KAAKzC,QAAQe,IAAYf,QAAQe,EAAU,GACvC,KAAM,IAAIzB,OAAM,wDAEpB,KAAK,GAAIgD,GAAME,EAASF,GAAOG,EAASH,GAAO,GAAI,CAE/C,GAAI3C,GAAKJ,QAAQ+C,EAAKvB,EAAS9B,GAC3ByD,IACJ,KACI,GAAI1C,QAAQe,GAAU,CAClB,GAAI4B,GAAO/C,uBAAuBD,EAAI4C,EAAcxB,EAAS9B,EAAM,GAC/D2D,EAAQhD,uBAAuBD,EAAI4C,EAAcxB,EAAS9B,KAC9DyD,GAAET,OAAQU,EAAOC,GAAS,EAAGD,EAAOC,IACpCD,EAAO/C,uBAAuBD,GAAK4C,EAAcxB,EAAS9B,EAAM,GAChE2D,EAAQhD,uBAAuBD,GAAK4C,EAAcxB,EAAS9B,MAC3DyD,EAAET,OAAQU,EAAOC,GAAS,EAAGD,EAAOC,IACpCR,EAAEC,SAASJ,KAAKK,GAChBF,EAAEE,IAAIL,KAAKS,OACR,CACH,GAAIC,GAAO/C,uBAAuBD,EAAI4C,EAAcxB,EAAU,EAAG9B,EAAM,GACnE2D,EAAQhD,uBAAuBD,EAAI4C,EAAcxB,EAAS9B,EAAM,EACpEyD,GAAET,OAAQU,EAAOC,GAAS,EAAGD,EAAOC,IACpCD,EAAO/C,uBAAuBD,EAAI,EAAGoB,EAAU,EAAG9B,EAAM,GACxD2D,EAAQhD,uBAAuBD,EAAI,EAAGoB,EAAS9B,EAAM,GACrDyD,EAAET,OAAQU,EAAOC,GAAS,EAAGD,EAAOC,IACpCD,EAAO/C,uBAAuBD,EAAI4C,EAAcxB,EAAU,EAAG9B,EAAM,GACnE2D,EAAQhD,uBAAuBD,EAAI4C,EAAcxB,EAAS9B,EAAM,GAChEyD,EAAET,OAAQU,EAAOC,GAAS,EAAGD,EAAOC,IACpCR,EAAEC,SAASJ,KAAKK,GAChBF,EAAEE,IAAIL,KAAKS,IAGnB,MAAOzB,GAEH,GAAoB,OAAhBA,EAAIC,QAAkB,KACrB,MAAMD,IAInB,MAAOmB,GC7XX,QAASS,eAAcC,GACrB,GAAIC,GAAgB,SAACX,GAAD,MAAOA,GAAEY,MAAM,KAAK,GAAGC,OAE3C,IAAIC,SAASJ,EAAOK,OAASD,SAASJ,EAAOM,MAC3C,KAAM,IAAI9D,OAAM,sBACX,IAAI4D,SAASJ,EAAOK,OAASD,SAASJ,EAAOM,MAAO,CACzD,GAAIF,SAASJ,EAAOR,KAAM,KAAM,IAAIhD,OAAM,sBAE1C,OADAwD,GAAOO,YAAc,EAAM/C,KAAKgD,IAAI,GAAIP,EAAcG,SAASJ,EAAOK,MAAQL,EAAOM,KAAON,EAAOK,OAC5FI,KAAKT,GAKZ,MAHAA,GAAOO,YAAc,EAAM/C,KAAKgD,IAAI,GAClChD,KAAKkD,IAAIT,EAAcD,EAAOK,MAAOJ,EAAcD,EAAOM,QAErDK,GAAGX,GAId,QAASS,MAAKT,GAEZ,GAAIY,GAAMR,SAASJ,EAAOK,MAAQL,EAAOa,GAAKb,EAAOY,GAAKzE,EAAO6D,EAAO7D,KAAMD,EAAI4E,MAAMF,GACpFhD,EAAMmD,WAAWX,SAASJ,EAAOK,MAAQL,EAAOM,KAAON,EAAOK,MAC9D3D,EAAOqE,WAAWf,EAAOR,KAEzB3C,EAAKJ,QAAQC,EAAMR,EAAGC,GACtB6E,EAAMrD,aAAaC,EAAKf,EAAIX,EAAGC,GAC/B8E,EAAe,GACfC,EAAQ,WAAA,MAAMC,SAChBC,UAAW,KACXC,OAASzD,EAAK,KACdK,QAASqD,UAAUpF,GACnBC,KAAMA,EACNoF,UAAW,OACXC,SAAUC,WAAWb,GACrBK,aAAcA,IAGhB,IAAID,EAAI,SAAaA,EAAI,QAEvB,MADAC,IAAgB,+BACTC,GAGT,IAAIQ,GAAAA,OAAUC,EAAAA,MACd,IAAIzE,QAAQhB,GAAI,CACd,GAAI0E,EAAK,EAAI,KAAOI,EAAI,QAAY,MAElC,MADAC,IAAAA,wCAAwDW,MAAMhB,EAAK,EAAKA,EAAK,EAAK,GAAlF,QAA4FgB,MAAMhB,GAAlG,IACOM,GAETQ,GAAWxF,EACXyF,EAAaX,EAAI,WAAiB,MAGlCU,GAAWxE,QAAQhB,EAAI,GAAKA,EAAI,EAAIA,EAAI,EACxCyF,EAAaX,EAAI,QAAY,EAAI,CAGnC,IAAIa,GAAAA,MACJ,KACEA,EAAa/E,uBAAuBD,EAAImE,EAAI,QAAYA,EAAI,GAAKA,EAAI,GAAIU,EAAUvF,EAAMwF,GAE3F,MAAOxD,GACL,GAAoB,OAAhBA,EAAIC,QAEN,MADA6C,IAAgB,mDACTC,GAET,MAAM/C,GAER,GAAKjB,QAAQhB,IAAOyF,SAAyBzE,QAAQhB,IAAOA,EAAIwF,EAAY,CAAA,GAAAI,IACzDJ,EAAUxF,EAA1BA,GADyE4F,EAAA,GACtEJ,EADsEI,EAAA,EAAA,IAAAC,IAErDF,EAAYjE,EAAhCA,GAFyEmE,EAAA,GAEpEF,EAFoEE,EAAA,GAI5E,GAAIzD,IAAKV,EAAMiE,GAAc,EAAGG,EAAIH,EAAajE,CACjD,OAAOuD,SACLC,UAAW,KACXC,OAAQ/C,EAAG0D,GACX/D,QAAS/B,EACTC,KAAMA,EACNoF,UAAW,QACXC,SAAUC,WAAWb,GACrBK,aAAcA,GACbU,GAKL,QAAShB,IAAGX,GAEV,GAAIiB,GAAe,GACfL,EAAKZ,EAAOY,GAAIC,EAAKb,EAAOa,GAAI1E,EAAO6D,EAAO7D,KAC9CkE,EAAOU,WAAWf,EAAOK,MAAOC,EAAOS,WAAWf,EAAOM,MACzD2B,EAAMnB,MAAMF,GAAKsB,EAAMpB,MAAMD,GAC7BrB,EAAMQ,EAAOR,GAGjB,IAAIoB,EAAKC,EAAI,CAAA,GAAAsB,IACGD,EAAKD,EAAlBA,GADUE,EAAA,GACLD,EADKC,EAAA,EAAA,IAAAC,IAEK9B,EAAMD,EAArBA,GAFU+B,EAAA,GAEJ9B,EAFI8B,EAAA,EAAA,IAAAC,IAGCxB,EAAID,EAAfA,GAHUyB,EAAA,GAGNxB,EAHMwB,EAAA,GAMb,GAAInF,QAAQgF,KAAShF,QAAQ+E,GAC3B,KAAM,IAAIzF,OAAM,0BAGlB,IAAIqE,EAAKD,IAAO,EAAG,CACjB,GAAIQ,GAAY,IAChB,KAAKhB,SAASZ,GAAM,CAClB,GAAI8C,GAAUvE,WAAWuC,EAAOD,EAAMU,WAAWf,EAAOR,KAAMyC,EAAK9F,EACnD,QAAZmG,EACFlB,GAAakB,EAAShC,EAAOD,GAG7BY,GAAgB,wFAGpB,MAAOE,SACLE,QAAUhB,EAAOC,GAAQ,EAAGA,EAAOD,GACnCpC,QAASgE,EACT9F,KAAMA,EACNoF,UAAW,MACXH,UAAWA,EACXI,SAAUZ,EACVK,aAAcA,KAMpB,QAASE,QAAOnB,GAad,QAASuC,GAAUC,EAAQC,EAAQC,EAAQC,GACzCC,EAAQJ,EACRK,EAAQJ,EACRK,EAAQJ,EACRK,EAAQJ,EAoBV,QAASK,KACPhD,EAAOiD,OAASC,EAAMC,QAAQC,GAAOC,SACrC,KAAK,GAAIC,GAAI,EAAGA,EAAItD,EAAOiD,OAAO9C,OAAQmD,IACxCtD,EAAOiB,cAAP,iBACQzD,KAAK+F,MAAMvD,EAAOiD,OAAOK,GAAG,IADpC,IAC2C9F,KAAK+F,MAAMvD,EAAOiD,OAAOK,GAAG,IADvE,mBAEIA,IAAMtD,EAAOiD,OAAO9C,OAAS,EAAI,KAAO,GAC9CH,GAAOiB,cAAgB,UA3CO,GAAVjE,GAAUwG,UAAArD,OAAA,GAAAsD,SAAAD,UAAA,GAAAA,UAAA,MAK5BjD,EAAcP,EAAOO,YACrBqC,KAAYC,KAAYC,KAAYC,KACpCW,EAAO,SAACC,EAAIC,EAAIC,EAAIC,GAAb,MAAoBtG,MAAKuG,MAAMJ,EAAKE,IAAOF,EAAKE,IAAOD,EAAKE,IAAOF,EAAKE,GAAM,KACrFV,EAAQ,SAACY,GAAD,MAAON,GAAKM,EAAE,GAAIA,EAAE,GAAIhE,EAAOqB,MAAM,GAAIrB,EAAOqB,MAAM,KAC9D4C,EAAS,GACXC,EAAOhH,QAAQ8C,EAAO/B,SAAW,GAAM+B,EAAOqB,MAAM,GAAK,GACzD8C,EAAOjH,QAAQ8C,EAAO/B,aAAkB+B,EAAOqB,MAAM,GAAK,EAW5DrB,GAAOoE,IAAMC,WAAWC,KAAK/F,QAAQyB,EAAO/B,QAAS+B,EAAO7D,OACzDoI,MAAM,SAAAP,GAAA,MAAMA,GAAE,IAAMhE,EAAOqB,MAAM,GAAK4C,GAAUD,EAAE,IAAMhE,EAAOqB,MAAM,GAAK4C,GACzED,EAAE,IAAME,GAAQF,EAAE,IAAMG,IACzBd,SAEH,IAAIH,GAAQmB,WAAWC,KAAKtE,EAAOoE,KAChCG,MAAM,SAAAP,GAAA,OACJhH,QAAcE,QAAQ8C,EAAO/B,UAAYjB,IAAQoC,IAAI4E,EAAE,GAAIA,EAAE,MAC9DhE,EAAOqB,MAAM,GAAK2C,EAAE,IAAMpB,GAAS5C,EAAOqB,MAAM,GAAK2C,EAAE,IAAMnB,GAC7D7C,EAAOqB,MAAM,GAAK2C,EAAE,IAAMlB,GAAS9C,EAAOqB,MAAM,GAAK2C,EAAE,IAAMjB,GAGjER,IAAWhC,EAAaA,GAAcA,EAAaA,EACnD,IAAIiE,GAAKtB,EAAMG,SAWf,IAAyB,SAArBrD,EAAOuB,UAGT,MAFAvB,GAAOyE,GAAKC,aAAaxD,MACzBlB,EAAOiD,UACAjD,CAGT,IAAIO,EAAc,GAIhB,MAHAP,GAAOiB,aAAe,qEACtBjB,EAAOyE,GAAKC,aAAaxD,MACzBlB,EAAOiD,UACAjD,CAGT,IAAyB,QAArBA,EAAOuB,UAAqB,CAM9B,GALwB,MAApBvB,EAAOoB,UACLpB,EAAOoB,UAAU,GAAKpB,EAAOqB,MAAM,GAAK,IAAMkB,QAAkB,WAAe,MAC9EA,mBAAkC,MAClCA,OAAkB,WAAe,MAElB,IAAlBW,EAAMyB,SAAiBH,EAAGrE,QAAU,EAItC,MAHAH,GAAOyE,GAAKC,aAAaE,SACzB5E,EAAOiB,cAAgB,iEACvB+B,IACOhD,CAETuC,QAAkB,WAAgB,SAC7BA,QAAkB,SAAe,IAIxC,IAFAW,EAAM2B,MAAML,GAERtB,EAAMyB,QAAU,EAIlB,MAHA3E,GAAOyE,GAAKC,aAAaI,SACzB9E,EAAOiB,cAAgB,uEACvB+B,IACOhD,CAOTuC,QAAkB,SAAe,IACjC,IAAIwC,GAAMV,WAAWC,KAAKtE,EAAOoE,KAAKjB,QAAQC,GAAOC,SACrD,OAAID,GAAM2B,EAAI,IAAM3B,EAAM2B,EAAI,KAAO,IAAyB,IAAlB7B,EAAMyB,SAChD3E,EAAOyE,GAAKC,aAAaM,WACzB9B,EAAQmB,WAAWC,MAAOS,EAAI,KAC9B/E,EAAOiB,cAAgB,yFACvB+B,IACOhD,IAGTA,EAAOyE,GAAKC,aAAaxD,MACzBlB,EAAOiB,aAAe,wDACtBjB,EAAOiD,UACAjD,GAGT,QAASgD,eAAchD,GAWrB,IAAK,GAPCiF,GAAO/H,QAAQ8C,EAAO/B,SAAW,IAAO+B,EAAOqB,MAAM,GAAK,GAC1D6D,EAAOlF,EAAOqB,MAAM,GAAK,GAAK8D,EAAOnF,EAAOqB,MAAM,GAAK,GACzD+D,EAAI/F,YAAYW,EAAO/B,QAAS+B,EAAO7D,MACvCqD,KACAD,KACA8F,KACAC,EAAU,SAACC,EAAIC,EAAIC,GAAT,MAAiBF,IAAMC,GAAMD,GAAME,GAAQF,GAAME,GAAMF,GAAMC,GAClElC,EAAI,EAAIA,EAAI8B,EAAE5F,IAAIW,OAAQmD,IAAK,CACtC,GAAIjH,GAAI+I,EAAE5F,IAAI8D,GACV1D,EAAAA,MACJ,IAAiB,IAAbvD,EAAE8D,OACJP,GAAKvD,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO4I,EAAO5I,EAAE,GAAG,KAAOA,EAAE,GAAG,GAAKA,EAAE,GAAG,IAAMA,EAAE,GAAG,OACrE,CACH,GAAIqJ,GAAAA,MAEFA,GADEJ,EAAQL,EAAM5I,EAAE,GAAG,GAAIA,EAAE,GAAG,IAC1B,EAEA,EACNuD,GAAKvD,EAAEqJ,GAAG,GAAKrJ,EAAE,GAAG,KAAO4I,EAAO5I,EAAE,GAAG,KAAOA,EAAEqJ,GAAG,GAAKrJ,EAAE,GAAG,IAAMA,EAAE,GAAG,GAEtEiJ,EAAQ1F,EAAGuF,EAAMD,KACnB1F,EAAIL,KAAKiG,EAAE5F,IAAI8D,IACf/D,EAASJ,KAAKiG,EAAE7F,SAAS+D,IACzB+B,EAAOlG,KAAKS,IAGhBI,EAAOR,IAAMA,EACbQ,EAAOT,SAAWA,EAClBS,EAAOqF,OAASA,CAIhB,IAAIjB,GAAMpE,EAAOoE,IACbuB,EAAItB,WAAWC,KAAKF,GACrBwB,QACC,SAAA5B,GAAA,MAAK,GAAIA,EAAE,GAAKA,EAAE,IAClB,SAAAA,GAAA,MAAKA,IACL,SAAC6B,EAAKC,GAAN,OAAmBD,IAAKA,EAAKE,MAAOD,EAAM3C,QAAQ,SAAAa,GAAA,MAAKA,GAAE,KAAIX,YAGjErD,GAAOoE,IAAMuB,EAAEK,OAAO,SAAAhC,GAAA,MAAKA,GAAE+B,MAAME,IAAI,SAAAC,GAAA,OAAOA,EAAG,GAAIA,EAAG,QAAM7C,UAC9DrD,EAAOmG,SAAWR,EAAEK,OAAO,SAAAhC,GAAA,MAAKA,GAAE+B,MAAME,IAAI,SAAAC,GAAA,OAAOA,EAAG,GAAIA,EAAG,QAAM7C,SAInE,IAAIJ,GAASjD,EAAOiD,MAepB,OAdAjD,GAAOiD,OAASA,EAAOgD,IAAI,SAAAjC,GAAA,OAAMA,EAAE,GAAIA,EAAE,MACzChE,EAAOoG,YAAcnD,EAAOgD,IAAI,SAAAjC,GAAA,OAAMA,EAAE,GAAIA,EAAE,MAE9ChE,EAAO9C,QAAUA,QAAQ8C,EAAO/B,SAChC+B,EAAOqG,WAAP,MAA0BC,UAAUtG,EAAOwB,SAAW,GAAtD,IAA4D8E,UAAUtG,EAAOwB,UAA7E,uBACAxB,EAAOuG,WAAP,OAA2BD,UAAUtG,EAAOwB,SAAW,GAAvD,IAA6D8E,UAAUtG,EAAOwB,UAA9E,0BASOxB,ECvST,QAASwG,UAASC,EAAazG,GA+C3B,IAAK,GA7CD0G,GAAgB,EAAGxB,EAAOlF,EAAOqB,MAAM,GAAK,GAAK8D,EAAOnF,EAAOqB,MAAM,GAAK,GAC1EsF,EAAO3G,EAAO9C,aAAkB8C,EAAOqB,MAAM,GAAK,GAAK4D,EAAOjF,EAAO9C,QAAU,IAAO8C,EAAOqB,MAAM,GAAK,GACxGuF,GACAC,KAAM,GACNC,WAAY,GACZC,OAAQ,SAERC,GACAC,OAEIC,MAAM,EACNC,SAAU,SACVzG,IAAKwE,EACLkC,IAAKjC,EACLyB,KAAMA,EACNS,WAAY,GACZC,UAAW,iBACXC,MAAO,kBAEXC,OACIN,MAAM,EACNxG,IAAKiG,EACLS,IAAKnC,EACL2B,KAAMA,EACNS,WAAY,GACZC,UAAW,eACXC,MAAO,gBAEXE,QACIC,WAAW,GAGfC,MACIC,aACIC,IAAK,iBACLC,OAAQ,iBACRC,KAAM,eACNC,MAAO,gBAEXN,WAAW,EACXO,gBAAiB,IAIrBR,KACKnE,EAAI,EAAGA,EAAItD,EAAOR,IAAIW,OAAQmD,IACnCmE,EAAOtI,MACHoI,MAAO,qBACPW,KAAMlI,EAAOR,IAAI8D,GACjB6E,WAAY,EACZT,WAAW,GAKnB,KAAK,GAHDU,IAAS,KAAO,IAAK,KAAO,IAAK,KAAO,KACxCC,GAAe,qBAAsB,iBAAkB,oBAElD/E,EAAI,EAAGA,EAAI8E,EAAMjI,OAAQmD,IAC9BmE,EAASA,EAAOa,SACZC,GAAI,QAAUjF,EAAEkF,WAChBjB,MAAOc,EAAY/E,GACnB4E,WAAa,OAAWE,EAAM9E,MAAO,GAAI,GAAK,GAAK8E,EAAM9E,MACzD6E,WAAY,IAEZI,GAAI,cAAgBjF,EAAEkF,WACtBjB,MAAOc,EAAY/E,GACnB4E,mBAAyBE,EAAM9E,MAAO,OAAU,GAAK8E,EAAM9E,MAC3D6E,WAAY,IAEZM,YAAa,QAAUnF,EAAEkF,WACzBjB,MAAOc,EAAY/E,GACnB4E,WAAa,QAAYE,EAAM9E,GAAK,OAAS,GAAI,GAAK,IAAM8E,EAAM9E,GAAK,OACvEoF,OACIC,KAAM,GACNC,UAAW,KAGfH,YAAa,cAAgBnF,EAAEkF,WAC/BjB,MAAOc,EAAY/E,GACnB4E,oBAA0BE,EAAM9E,GAAK,OAAS,OAAU,IAAM8E,EAAM9E,GAAK,OACzEoF,OACIC,KAAM,GACNC,UAAW,KAGfH,YAAa,QAAUnF,EAAEkF,WACzBjB,MAAOc,EAAY/E,GACnB4E,WAAa,QAAYE,EAAM9E,GAAK,OAAS,GAAI,GAAK,IAAM8E,EAAM9E,GAAK,OACvEoF,OACIC,KAAM,GACNC,UAAW,KAGfH,YAAa,cAAgBnF,EAAEkF,WAC/BjB,MAAOc,EAAY/E,GACnB4E,oBAA0BE,EAAM9E,GAAK,OAAS,OAAU,IAAM8E,EAAM9E,GAAK,OACzEoF,OACIC,KAAM,GACNC,UAAW,KAKvB,KAAK,GAAItF,GAAI,EAAGA,EAAItD,EAAOoE,IAAIjE,OAAQmD,IAAK,CACxC,GAAIuF,IAAoC,EAA3B7I,EAAOmG,SAAS7C,GAAG,GAAG,GAAStD,EAAOmG,SAAS7C,GAAG,GAAG,IAAM,CACxEmE,GAAOtI,MACHoI,MAAOvH,EAAO9C,SAAqB,IAAV2L,EAAc,eAAiB,iBACxDX,KAAMlI,EAAOoE,IAAId,GACjBwF,QACI5B,MAAM,EACN6B,OAAQ/I,EAAO9C,QAAU,KAAwBwJ,EACjDsC,OAAQhJ,EAAO9C,QAAU,SAAqB,IAAV2L,EAAc,SAAW,YAEjEH,OACIxB,MAAM,GAEV+B,aAAcjJ,EAAOmG,SAAS7C,GAC9BoE,WAAW,IAGnB,IAAK,GAAIpE,GAAI,EAAGA,EAAItD,EAAOiD,OAAO9C,OAAQmD,IAAK,CAC3C,GAAIuF,IAAoC,EAA3B7I,EAAOoG,YAAY9C,GAAG,GAAStD,EAAOoG,YAAY9C,GAAG,IAAM,CACxEmE,GAAOtI,MACHoI,MAAOvH,EAAO9C,SAAqB,IAAV2L,EAAc,eAAiB,iBACxDX,MAAOlI,EAAOiD,OAAOK,IACrBwF,QACI5B,MAAM,EACN6B,OAAQ/I,EAAO9C,QAAU,KAAuBwJ,EAChDsC,OAAQhJ,EAAO9C,QAAU,SAAqB,IAAV2L,EAAc,SAAW,WAC7DF,MAAM,EACNO,UAAWlJ,EAAO9C,SAAqB,IAAV2L,EAAc,eAAiB,kBAEhEI,cAAejJ,EAAOoG,YAAY9C,IAClCoE,WAAW,IAMM,SAArB1H,EAAOuB,WACPkG,EAAOtI,MACHoI,MAA4B,UAArBvH,EAAOuB,UAAwB,mBAAqB,iBAC3D2G,MAAOlI,EAAOqB,OACdyH,QACI5B,MAAM,EACN8B,OAA6B,UAArBhJ,EAAOuB,UAAwB,UAAY,SACnDwH,OAAQrC,EACRiC,MAAM,EACNO,UAAgC,UAArBlJ,EAAOuB,UAAwB,mBAAqB,kBAEnEmG,WAAW,IAGM,OAArB1H,EAAOoB,WACPqG,EAAOtI,MACHoI,MAAO,iBACPW,MAAOlI,EAAOoB,WACd0H,QACI5B,MAAM,EACN8B,OAAQ,UACRD,OAAQrC,EACRiC,MAAM,EACNO,UAAW,oBAEfxB,WAAW,EACXS,WAAY,GAGpB,IAAIgB,GAAeC,EAAE,IAAM3C,GACvB4C,EAAOD,EAAEC,KAAKF,EAAc1B,EAAQT,GAEpCsC,EAAgB,IAgBpB,IAfAH,EAAaI,KAAK,YAAa,SAASC,EAAOC,EAAKC,GAC5CA,EACIJ,IAAkBI,EAAKC,YACvBL,EAAgBI,EAAKC,UACrBP,EAAE,YAAYQ,SACdC,YAAYH,EAAKI,MAAOJ,EAAKK,MACzB,IAAML,EAAKjC,OAAOwB,aAAaS,EAAKC,WAAW,GAAK,KACpDD,EAAKjC,OAAOwB,aAAaS,EAAKC,WAAW,GAAK,OAGtDP,EAAE,YAAYQ,SACdN,EAAgB,QAIpBtJ,EAAO9C,QACP,IAAK,GAAIoG,GAAI,EAAGA,EAAItD,EAAOoE,IAAIjE,OAAQmD,IAAK,CACxC,GAAI8B,GAAI5H,KAAKwM,MAAMhK,EAAOoE,IAAIjE,OAAS,GACnCjE,EAAI8D,EAAOoE,IAAId,GAAGtD,EAAOoE,IAAId,GAAGnD,OAAS,GACzCS,EAAKZ,EAAOmG,SAAS7C,GAAGtD,EAAOoE,IAAId,GAAGnD,OAAS,GAC/C8J,EAAIZ,EAAKa,aAAc5L,EAAGpC,EAAE,GAAI8F,EAAG9F,EAAE,KACrCiO,EAAOd,EAAKe,UACZnD,EAAQkD,EAAKlD,MAAOO,EAAQ2C,EAAK3C,KACjClE,GAAI,IAAM8B,EAAI,GAAKlJ,EAAE,IAAM+K,EAAMG,KAAOlL,EAAE,IAAM+K,EAAMvG,KACtDxE,EAAE,IAAMsL,EAAMJ,IAAM,KAAQlL,EAAE,IAAMsL,EAAM9G,IAAM,KAChDyI,EAAakB,OAAb,iEAC6CJ,EAAElC,MAAQzE,IAAM8B,EAAI,GAAK,KADtE,aACqF6E,EAAEpC,IAAM,IAD7F,sCAEavE,IAAM8B,EAAI,sBAAwB,KAAa,EAARxE,EAAG,GAASA,EAAG,IAFnE,0DAWR,KAAK,GAJD0J,GAAM9M,KAAK+F,MAAMvD,EAAOoE,IAAIjE,OAAS,GACrCoK,EAAOvK,EAAOmG,SAASmE,GAAKtK,EAAOoE,IAAIkG,GAAKnK,OAAS,GACrDqK,EAAShN,KAAKwM,OAAiB,EAAVO,EAAK,GAASA,EAAK,IAAM,GAEzCjH,EAAI,EAAGA,EAAItD,EAAOoE,IAAIjE,OAAQmD,IAAK,CACxC,GAAIpH,GAAI8D,EAAOoE,IAAId,GAAGtD,EAAOoE,IAAId,GAAGnD,OAAS,GACzCS,EAAKZ,EAAOmG,SAAS7C,GAAGtD,EAAOoE,IAAId,GAAGnD,OAAS,GAC/C8J,EAAIZ,EAAKa,aAAc5L,EAAGpC,EAAE,GAAI8F,EAAG9F,EAAE,KACrCiO,EAAOd,EAAKe,UACZnD,EAAQkD,EAAKlD,MAAOO,EAAQ2C,EAAK3C,MACjCiD,EAAMjN,KAAK+F,OAAe,EAAR3C,EAAG,GAASA,EAAG,IAAM,GACvC5D,GAAe,EAAR4D,EAAG,GAASA,EAAG,IAAM,CAChC,IAAI4J,EAAS,IAAMC,EAAM,GACjBvO,EAAE,IAAM+K,EAAMG,IAAM,KAAQlL,EAAE,IAAM+K,EAAMvG,IAAM,KAAQxE,EAAE,IAAMsL,EAAMJ,IAAM,IAC5ElL,EAAE,IAAMsL,EAAM9G,IAAM,GAAK,CACzB,GAAIgK,IACAnD,MAAe,IAARvK,EAAY,UAAY,UAC/B+K,KAAMkC,EAAElC,MAAQyC,IAAWC,EAAM,GAAK,IACtC5C,IAAKoC,EAAEpC,KAAe,IAAR7K,MACVwN,IAAWC,GAAOvO,EAAE,IAAMsL,EAAMJ,IAAM,KAAQlL,EAAE,IAAMsL,EAAM9G,IAAM,IAAO,GAAK,IAGlFiK,GAAIH,IAAWC,GAEE,IAARzN,GAAad,EAAE,IAAMsL,EAAMJ,IAAM,IAC5B,mBACA,IACJ,sBAEJ,GACNwD,GAAY,EAARhK,EAAG,GAASA,EAAG,GACnBiK,GAAIL,IAAWC,GAAe,IAARzN,GAAad,EAAE,IAAMsL,EAAM9G,IAAM,IACjD,mBACA,GAEVyI,GAAakB,OAAb,qEAC8CK,EAAGnD,MADjD,WACiEmD,EAAG3C,KADpE,YACoF2C,EAAG7C,IADvF,yCAEa6C,EAAGC,GAAKD,EAAGE,GAAKF,EAAGG,GAFhC,+DAUhB,IAAK,GAAIvH,GAAI,EAAGA,EAAItD,EAAOR,IAAIW,OAAQmD,IACnC,GAAIA,EAAI,IAAM,GAA2B,IAAtBtD,EAAOR,IAAIW,OAAc,CACxC,GAAI2K,GAAKzB,EAAKa,aAAc5L,EAAG0B,EAAOqF,OAAO/B,GAAItB,EAAGiD,GACpDkE,GAAakB,OAAb,0DAC0CS,EAAG/C,KAAO,IADpD,aACkE+C,EAAGjD,IAAM,IAD3E,iCAEa7H,EAAOT,SAAS+D,GAF7B,+CASZ,QAASuG,aAAYvL,EAAG0D,EAAG+I,GACvB3B,EAAAA,kKAGqC2B,EAHrC,gCAMKC,KACGC,QAAS,QACTpD,IAAK7F,EACL+F,KAAMzJ,IACP4M,SAAS,QAAQC,OAAO,KC3HnC,QAASC,cAEPhC,EAAE,qBAAqBiC,KAAK,UAAUC,WAAW,SAGnD,QAASC,UAASC,GAEhB,GAAIC,GAAQrC,EAAE,SACVsC,EAAc,SAACC,GAGjB,MAFAF,GAAMG,SAAS,gBACZC,KADH,iFACyFF,IAClF,GAELG,EAAQ/K,WAAWyK,EAAKO,KAAKhG,OAC7BiG,EAAQjL,WAAWyK,EAAKS,KAAKlG,OAC7BmG,EAAOC,SAASX,EAAKY,IAAIrG,OACzBsG,EAAWC,OAAOC,MAAMT,IAAUQ,OAAOC,MAAMP,IAAUM,OAAOC,MAAML,GAC1E,OAAIG,IAAY,EAAUX,EAAY,oCAE/Ba,MAAMT,KAAWA,EAAQ,GAAKA,EAAQ,KACxCS,MAAMP,KAAWA,EAAQ,GAAKA,EAAQ,KACtCO,MAAML,KAAUA,EAAO,IAAMA,EAAO,KAC9BR,EAAY,6BACkB,KAAnCtC,EAAE,SAASoD,aAAa,OACnBd,EAAY,iDAErBtC,EAAE,iBAAiBkC,WAAW,aACvB,GAIX,QAASmB,YAAWC,EAAWrM,EAAMC,GAEnC8I,EAAE,SAASoD,aAAa,MAAOE,GAC/BtD,EAAE,SAASoD,aAAa,MAAOE,EAAY,GAC3CtD,EAAE,WAAWxL,IAAIyC,GACjB+I,EAAE,WAAWxL,IAAI0C,GAGnB,QAASqM,WAAUnB,GAEjB,GAAIoB,GAAYxD,EAAE,mBACdyD,EAAczD,EAAE,eAEhBsC,EAAc,WAChBkB,EAAUf,KAAV,gLAMAgB,EAAYhB,KAAK,KAGflN,EAAIwN,SAASX,EAAKsB,MAAM/G,OAAQnH,EAAIuN,SAASX,EAAKuB,MAAMhH,OAAQnG,EAAIuM,SAASa,UAAA,KACjF,IAAIrO,EAAIC,EAAR,CAAA,GAAAkD,IAAqBlD,EAAGD,EAAZA,GAAZmD,EAAA,GAAelD,EAAfkD,EAAA,GACA,GAAIyK,MAAM5N,IAAM4N,MAAM3N,IAAMD,GAAK,GAAKC,GAAK,GAAK,EAAID,EAAIC,EAAIC,gBAE1D,MADA6M,MACO,CAGTkB,GAAUf,KAAK,GACf,IAAIoB,GAAc7D,EAAAA,mBACd8D,EAAY9D,EAAE,cAClByD,GAAYhB,KAAK,IACdxB,OAAOjB,EAAE,wEAAwEiB,OAAO4C,IACxF5C,OAAO6C,GAEVD,EAAY5C,OAAZ,iCAAoDrL,GAAGL,EAAGC,EAAGgB,GAAG9B,QAAQ,GAAG0K,WAA3E,iCAIA2E,6BAA6BxO,EAAGC,EAAGgB,EAAGqN,EAKtC,KAAK,GADDG,GAAmB,GAAIC,OAAM,IACxBzM,EAAK,EAAGA,EAAK,GAAIA,IACxB,GAAI1D,QAAQ4D,MAAMF,MAAS1D,QAAQyB,EAAGC,GAItC,IACEwO,EAAiBxM,GAAM7B,UAAUC,GAAGL,EAAGC,EAAGgB,GAAIX,MAAMN,EAAGC,GAAIkC,MAAMF,GAAKhB,EAAG1C,QAAQyB,EAAGC,GAAKgC,EAAK,EAAI,EAAIxB,IAAIT,EAAGC,IAC1Gd,QAAQ,GAAG0K,WAEhB,MAAOrK,GACLiP,EAAiBxM,UARjBwM,GAAiBxM,KAgBrB,KAAK,GAFD0M,GAAoB,EAtDDC,EAAA,SAwDd3M,GAMP,GAAIwM,EAAiBxM,SAAcwM,EAAiBxM,EAAK,QACvD,MAAA,UAEF0M,KAEAL,EAAY5C,OACVjB,EAAAA,WAAaxH,MAAMhB,GAAnB,eAAqCwM,EAAiBxM,GAAtD,gCACG4M,MAAM,WAAA,MAAMf,YAAW7L,EAAIwM,EAAiBxM,GAAKwM,EAAiBxM,EAAK,MACvEoK,IAAI,SAAU,YACjBX,OACAjB,EAAAA,WAAaxH,MAAMhB,EAAK,GAAxB,eAAyCwM,EAAiBxM,EAAK,GAA/D,gCACG4M,MAAM,WAAA,MAAMf,YAAW7L,EAAIwM,EAAiBxM,GAAKwM,EAAiBxM,EAAK,MACvEoK,IAAI,SAAU,WAGnB,IAAIhL,IACF7D,KAAMyD,EACNgB,GAAIA,EACJC,GAAID,EAAK,EACTP,KAAM+M,EAAiBxM,GACvBN,KAAM8M,EAAiBxM,EAAK,GAC5BpB,IAAK,IAGHiO,EAAazK,cAAcjD,cAAcC,IACzC0N,EAAAA,WAAoBlQ,KAAK+F,MAAM3C,EAAK,GAEpC+M,EAAQvE,EAAAA,qaAUoBqE,EAAWpH,WAV/B,8BAWKqH,EAXL,iRAgBCD,EAAWlH,WAhBZ,yDAsBZ2G,GAAU7C,OAAOsD,GACjBnH,SAASkH,EAAQD,IAxDV7M,EAAK,EAAGA,EAAK,GAAIA,GAAM,EAAG,CAAA2M,EAA1B3M,GAgET,MAL0B,KAAtB0M,GACF5B,IAGFkC,QAAQC,IAAIC,OAAO,UAAWF,QAAQC,OAC/B,EAGT,QAASV,8BAA6BxO,EAAGC,EAAGgB,EAAGqN,GAE7C,GAAIc,GAAwB,IAANnO,EAClBoO,EAAU,SAAChK,GAAD,MAAOoF,GAAE,UAAUxL,IAAIoG,GACrC,IAAI+J,EAAgB,CAClB,GAAIE,GAAQrR,OAAOoC,GAAGL,EAAGC,EAAGgB,GAAI1C,QAAQyB,EAAGC,GAAK,EAAI,EAAGgB,GAAG9B,QAAQ,GAAG0K,UACrEyE,GAAY5C,OACVjB,EAAAA,+DAEuClM,QAAQyB,EAAGC,GAAK,QAAU,WAFjE,kCAGgBqP,EAHhB,wDAMGT,MAAM,WAAA,MAAMQ,GAAQC,KACpBjD,IAAI,SAAU,YAIrB,GAAIkD,GAAatR,OAAOoC,GAAGL,EAAGC,EAAGgB,GAAImO,EAAiB,EAAI,EAAGnO,GAAG9B,QAAQ,GAAG0K,UAC3EyE,GAAY5C,OACVjB,EAAAA,2DAEuC2E,EAAiB,QAAU,IAFlE,gCAGgBG,EAHhB,oDAMGV,MAAM,WAAA,MAAMQ,GAAQE,KACpBlD,IAAI,SAAU,YHlVrB,GAAMnM,iBAAkB,GAElB6F,cACFE,SAAW,EACXE,SAAW,EACXE,WAAa,EACb9D,MAAQ,GAGNiN,SACF,sBAAuB,yDAA0D,mCACjF,uBAAwB,sBAAuB,yBAE7C/Q,aACA,MAAO,KAAO,OACd,KAAO,KAAO,OACd,KAAO,KAAO,OACd,MAAO,KAAO,OACd,KAAO,MAAO,OACd,MAAO,MAAO,OACd,MAAO,MAAO,QACd,MAAO,MAAO,QACd,MAAO,MAAO,QAEdM,QACA,gBACO,WACA,MACP,gBACO,UACD,MAGNkE,OACF,eAAgB,eAAgB,iBAAkB,iBAAkB,eAAgB,eACpF,iBAAkB,iBAAkB,eAAgB,eAAgB,iBAAkB,kBAGpF0E,WACF,SAAU,SAAU,WAAY,WAAY,SAAU,SAAU,WAAY,WAAY,SAAU,SAClG,WAAY,YAGVxF,OAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3CQ,WAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCG,WAAa,SAACb,GAAD,MAAQA,GAAK,IAAM,EAAIA,EAAKA,EAAK,GAE9C5B,GAAK,SAACL,EAAGC,EAAGzC,GAAP,OAA2B,IAATA,EAAc,KAAQ,MAASqB,KAAKuG,KAAK,GAAKpF,EAAIA,EAAIA,EAAIC,EAAIA,EAAIA,IAAMpB,KAAK4Q,IACpGnP,MAAQ,SAACN,EAAGC,GAAJ,MAAUpB,MAAK6Q,KAAK7Q,KAAKuG,KAAK,GAAKnF,GAAK,EAAID,EAAIC,KACxDQ,IAAM,SAACT,EAAGC,GAAJ,OAAW,EAAID,EAAIC,GAAK,GAC9B0P,SAAW,SAACpS,GAAD,OAAQA,EAAI,GAAK,IAAM,GAClCqS,UAAY,SAAC5P,EAAGC,GAAJ,MAAwB,KAAdQ,IAAIT,EAAGC,IAC7B1B,QAAU,WAAc,MAA4B,KAArBsG,UAAUrD,OAC3CoO,UAAU/K,UAAU,GAAIA,UAAU,IAClC8K,SAAS9K,UAAU,KA6BjBzE,UAAY,SAAClC,EAAI2R,EAAOtS,EAAGC,EAAMa,GAArB,MAA6BF,wBAAuBD,EAAIW,KAAKwD,IAAI,EAAIwN,GAAQtS,EAAGC,EAAMa,ICnFpGoD,SAAW,SAAA4D,GAAA,MAAKuI,OAAMxL,WAAWiD,KEAjCyK,SAAWC,YAAYC,MACvBC,YAAAA,MAEJxF,GAAEyF,UAA4D,OAAlDC,UAAUC,SAASC,OAAO,EAAG,GAAGC,cACxC,kEACA,0FAC2C,WAC7CL,YAAcF,YAAYC,MAC1BO,QAAQC,IAAI,uBAAyBP,YAAcH,UAAU3Q,QAAQ,KAGvE,IAAIkP,eACHoC,OAAOC,WAAa,WACnB,GAAIC,GAAAA,OACFC,EAAS,MACTC,EAAS,qBACTC,EAAS,SAAUrK,GAAK,MAAOsK,oBAAmBtK,EAAEuK,QAAQJ,EAAI,OAChErM,EAASkM,OAAOQ,SAASJ,OAAOK,UAAU,EAG5C,KADA7C,aACOsC,EAAQE,EAAOM,KAAK5M,IACzB8J,UAAUyC,EAAOH,EAAM,KAAOG,EAAOH,EAAM,QAG3C,6CAA6CS,KAAKjB,UAAUkB,YAC9D5G,EAAE,iBAAiBoD,aAAa,SAGlC,IAAIyD,OAAQ7G,EAAE,OAMd,IAAI6G,MAAMC,SAAS,SAAU,CAG3B,IAAK,GADDC,aAAc/G,EAAE,WACX9F,EAAI,EAAGA,EAAI6K,QAAQhO,OAAQmD,IAClC6M,YAAY9F,OAAZ,kBAAqC/G,EAArC,KAA2C6K,QAAQ7K,GAAnD,YAEF6M,aAAY3D,aAAa,MAAO,GAC7BA,aAAa,WACb4D,GAAG,mBAAoBhF,YACvBgF,GAAG,oBAAqBhF,YAQ7B,GAAI6E,MAAMC,SAAS,SAAU,CAE3B,GAAI/T,MAAOgQ,SAASa,UAAA,OAEhBT,MAAMpQ,OAASA,KAAO,GAAKA,KAAO,KACpCyT,SAASS,KAAO,cAElBjH,EAAE,UAAU,GAAGkH,WAAa,UAAYnC,QAAQhS,MAAQ,WAExDiN,EAAE,eAAeiC,KAAjB,QAA8BlP,MAAQoU,YAAY,SAOlD,KAAK,GALDC,WAAYpH,EAAE,SAAUqH,UAAYrH,EAAE,SAAU+G,aAAc/G,EAAE,WAChEsH,YAActH,EAAE,gBAIX9F,GAAI,EAAGA,GAAI1B,MAAMzB,OAAQmD,KAAK,CACrC,GAAInH,MAAQ,EAAG,CACb,GAAIwU,WAAsB,IAATxU,KAAa,EAAI,CAClC,IAAImH,IAAKqN,UAAW,MAEtBD,YAAYrG,OAAZ,kBAAqC/G,GAArC,KAA2C1B,MAAM0B,IAAjD,aAEF,IAAK,GAAIA,KAAI,EAAGA,IAAI6K,QAAQhO,OAAQmD,MAClC6M,aAAY9F,OAAZ,kBAAqC/G,IAArC,KAA2C6K,QAAQ7K,KAAnD,YAEF6M,cAAY3D,aAAa,MAAOrQ,MAChCiN,EAAE,iBAAiBoD,aAAa,WAEhCpD,EAAE,UAAUgH,GAAG,mBAAoBhF,YACnCoF,UAAUJ,GAAG,oBAAqB,SAAUpM,EAAG4M,GAC7C,GAAItN,GAAIsN,EAAQ,CAChBxF,cACAqF,UAAUpF,KAAK,UAAUwF,KAAK,WAC5B,GAAI9K,GAAQoG,SAAS/C,EAAE7M,MAAMqB,QACzB0F,EAAI,IAAM,GAAKyC,IAAUzC,EAAI,GAAKA,EAAI,IAAM,GAAKyC,IAAUzC,EAAI,IACjEmN,UAAUjE,aAAa,MAAOzG,OAWtC,GAAIkK,MAAMC,SAAS,SAAU,CAG3B,IAAA,GAH2BY,OAGZ,OAAQ,KAAM,KAAM,OAAQ,OAAQ,OAAnDC,IAAA,EAAAA,IAAAD,KAAA3Q,OAAA4Q,MAA2D,CAAtD,GAAIzN,KAAAA,KAAAA,IACP,IAAqBG,SAAjBuJ,UAAU1J,KAAkB,CAC9BsM,SAASS,KAAO,YAChB,QAIJ,GAAIrQ,SACF7D,KAAMgQ,SAASa,UAAA,MACfpM,GAAIuL,SAASa,UAAA,IACbnM,GAAIsL,SAASa,UAAA,IACb3M,KAAM2M,UAAA,KACN1M,KAAM0M,UAAA,KACNxN,IAAKwN,UAAA,KAGHgE,aAAe,SAACzL,EAAIlJ,EAAGC,GAAR,MAAeiJ,IAAMlJ,GAAKkJ,GAAMjJ,GAC/CwP,MAAQ/K,WAAWf,OAAOK,MAAO2L,MAAQjL,WAAWf,OAAOM,MAAO4L,KAAOnL,WAAWf,OAAOR,KAE3F6M,SAAWC,OAAOC,MAAMT,QAAUQ,OAAOC,MAAMP,QAAUM,OAAOC,MAAML,SACtEG,UAAY,GAAKE,MAAMvM,OAAO7D,OAASoQ,MAAMvM,OAAOY,KAAO2L,MAAMvM,OAAOa,MACzE0L,MAAMT,SAAWA,MAAQ,GAAKA,MAAQ,KAAOS,MAAMP,SAAWA,MAAQ,GAAKA,MAAQ,KACnFO,MAAML,QAAUA,KAAO,IAAMA,KAAO,OAAS8E,aAAahR,OAAO7D,KAAM,EAAG,IAC1E6U,aAAahR,OAAOY,GAAI,EAAG,KAAQoQ,aAAahR,OAAOa,GAAI,EAAG,MAE/D+O,SAASS,KAAO,cAIlBjH,EAAE,UAAU,GAAGkH,WAAa,UAAYnC,QAAQnO,OAAO7D,MAAQ,UAE/D,IAAIsR,YAAazK,cAAcjD,cAAcC,QAE7CoJ,GAAE,cACCwC,SAAS6B,WAAWhJ,KAAOC,aAAaxD,MAAQ,gBAAkB,gBAClE2K,KAAK4B,WAAWxM,cACnBmI,EAAE,eAAeyC,KAAK4B,WAAWpH,YACjC+C,EAAE,eAAeyC,KAAK4B,WAAWlH,YACjC6C,EAAE,IAAMqE,WAAWlM,UAAY,UAAUyJ,IAAI,UAAW,IAC3B,OAAzByC,WAAWrM,WACbgI,EAAE,eAAe4B,IAAI,UAAW,IAElC5B,EAAE5C,SAAS,mBAAoBiH","file":"app.min.js","sourcesContent":["\n'use strict';\n\nconst seriesThreshold = 90; // max processable (2n + m) limit\n\nconst AssignResult = {\n    accurate : 0,\n    possible : 1,\n    impossible : 2,\n    error : 3\n};\n\nconst typeArr = [\n    'Air-suspended SWNTs', 'SWNTs on \\\\(\\\\mathrm{SiO_2}/\\\\mathrm{Si}\\\\) substrates', 'SWNT arrays on quartz substrates',\n    '\"Super-growth\" SWNTs', 'SDS-dispersed SWNTs', 'ssDNA-dispersed SWNTs'\n];\nconst paramType0 = [\n    [ 1.194, 0.179, 0.053 ],\n    [ 2.110, 0.388, 0.154 ],\n    [ 3.170, 0.764, 0.286 ], //M11\n    [ 4.286, 1.230, 0.412 ],\n    [ 5.380, 1.922, 0.644 ],\n    [ 6.508, 2.768, 0.928 ], //M22\n    [ 7.624, 3.768, 1.024 ], //S55\n    [ 8.734, 4.921, 1.479 ], //S66\n    [ 9.857, 6.228, 1.692 ]  //M33\n]; // (a, b, c) of type 0\nconst betaP =[\n    [ 0.09, -0.07 ],\n    [ -0.18, 0.14 ],\n    [ -0.19, 0.29 ],\n    [ 0.49, -0.33 ],\n    [ -0.43, 0.59 ],\n    [ -0.6, 0.57 ]\n]; // type 3\n\nconst p1Arr = [\n    '\\\\(S_{11}\\\\)', '\\\\(S_{22}\\\\)', '\\\\(M_{11}^-\\\\)', '\\\\(M_{11}^+\\\\)', '\\\\(S_{33}\\\\)', '\\\\(S_{44}\\\\)',\n    '\\\\(M_{22}^-\\\\)', '\\\\(M_{22}^+\\\\)', '\\\\(S_{55}\\\\)', '\\\\(S_{66}\\\\)', '\\\\(M_{33}^-\\\\)', '\\\\(M_{33}^+\\\\)'\n];\n\nconst p1Arr_raw = [\n    'S_{11}', 'S_{22}', 'M_{11}^-', 'M_{11}^+', 'S_{33}', 'S_{44}', 'M_{22}^-', 'M_{22}^+', 'S_{55}', 'S_{66}',\n    'M_{33}^-', 'M_{33}^+'\n];\n\nconst p1ToP = [ 0, 1, 2, 2, 3, 4, 5, 5, 6, 7, 8, 8 ];\nconst pToLesser = [ 0, 0, 2, 3, 3, 5, 6, 6, 9 ];\nconst p1ToLesser = (p1) => p1 % 2 === 0 ? p1 : p1 - 1;\n\nconst Dt = (n, m, type) => ((type !== 4) ? 0.142 : 0.144) * Math.sqrt(3 * (n * n + n * m + m * m)) / Math.PI;\nconst Theta = (n, m) => Math.atan(Math.sqrt(3) * m / (2 * n + m));\nconst Mod = (n, m) => (2 * n + m) % 3;\nconst isMetalP = (p) => (p + 1) % 3 === 0;\nconst isMetalNM = (n, m) => Mod(n, m) === 0;\nconst isMetal = function () { return arguments.length === 2 ?\n    isMetalNM(arguments[0], arguments[1]) :\n    isMetalP(arguments[0]); };\n\nfunction getRBMParameters(p, type) {\n    function Param(a, b) { this.a = a; this.b = b; }\n    switch (type) {\n        case 0: switch (p) {\n                case 0: case 1: return new Param(204, 27);\n                case 2: return new Param(200, 26);\n                default: return new Param(228, 0);\n        }\n        case 1: return new Param(235.9, 5.5);\n        case 2: return new Param(217.8, 15.7);\n        case 3: return new Param(227.0, 0.3);\n        case 4: return new Param(223.5, 12.5);\n        case 5: return new Param(218, 18.3);\n        default: throw new Error('invalid type');\n    }\n}\n\nfunction wRBM2Dt(wRBM, p, type) {\n    let ab = getRBMParameters(p, type);\n    return ab.a / (wRBM - ab.b);\n}\n\nfunction dt2RBM(dt, p, type) {\n    let ab = getRBMParameters(p, type);\n    return ab.a / dt + ab.b;\n}\n\nconst getEnergy = (dt, theta, p, type, mod) => getEnergyFromCos3Theta(dt, Math.cos(3 * theta), p, type, mod);\n\nfunction getEnergyFromCos3Theta(dt, cos3Theta, p, type, mod)\n{\n    let r; // return value\n    if (isMetal(p) && mod > 0)\n        throw new Error('mod should be in accordance with p');\n    if (type <= 2) {\n\n        if (p >= 9)\n            throw new Error('higher than S66 not available');\n        let derivative = -paramType0[p][0] / (dt * dt) + 2 * paramType0[p][1] / (dt * dt * dt);\n        if (derivative > 0) // 1st derivative\n            throw new Error('dt');\n        if (isMetal(p))\n            r = paramType0[p][0] / dt - paramType0[p][1] / (dt * dt) + paramType0[p][2] / (dt * dt) * cos3Theta * (mod * 2 + 1);\n        // mod * 2 + 1 <==> mod === 0 ? 1 : -1\n        else\n            r = paramType0[p][0] / dt - paramType0[p][1] / (dt * dt) +\n                paramType0[p][2] / (dt * dt) * cos3Theta * (((p % 3) === (mod % 2)) ? -1 : 1);\n        r -= (type === 1) ? 0.04 : ((type === 2) ? 0.1 : 0);\n\n    } else if (type === 3) {\n\n        if (p >= 6)\n            throw new Error('higher than M22 not available for Super-Growth');\n        let a = 1.074, b = 0.467, c = 0.812;\n        let sgE = (extMod) => a * (p + 1) / dt * (1 + b * Math.log10(c / ((p + 1) / dt)))\n            + betaP[p][extMod] / (dt * dt) * cos3Theta\n            + ((p > 2) ? 0.059 * (p + 1) / dt : 0); // extra for larger than M11; warning: p + 1\n        if (isMetal(p))\n            r = sgE(mod + 1); // 0(Mii+) -> 1, -1(Mii-) -> 0\n        else\n            r = sgE(mod - 1); // 1(MOD1) -> 0, 2(MOD2) -> 1\n\n    } else if (type === 4 || type === 5) {\n\n        if (p === 0)\n            r = 1 / (0.1270 + 0.8606 * dt) + ((mod === 1) ? 0.04575 : -0.08802) / (dt * dt) * cos3Theta;\n        else if (p === 1)\n            r = 1 / (0.1174 + 0.4644 * dt) + ((mod === 1) ? -0.1829 : 0.1705) / (dt * dt) * cos3Theta;\n        else\n            throw new Error('only S11 and S22 are available for SDS-dispersed or ssDNA dispersed');\n        r -= (type === 5) ? 0.02 : 0;\n\n    } else throw new Error('invalid type');\n\n    return r;\n}\n\nfunction getCos3Theta(val, dt, p, type) {\n\n    // returns cos3Theta as [val_modLesser, val_modLarger]\n\n    let r = [-1, -1];\n\n    if (type <= 2) {\n\n        if (p >= 9)\n            throw new Error('higher than S66 not available');\n        val += (type === 1) ? 0.04 : ((type === 2) ? 0.1 : 0);\n        if (isMetal(p)) {\n            r[0] = (paramType0[p][0] / dt - paramType0[p][1] / (dt * dt) - val) / paramType0[p][2] * (dt * dt); // Mii-\n            r[1] = (-(paramType0[p][0] / dt - paramType0[p][1] / (dt * dt) - val)) / paramType0[p][2] * (dt * dt); // Mii+\n        } else {\n            r[0] = (-(paramType0[p][0] / dt - paramType0[p][1] / (dt * dt) - val))\n                / paramType0[p][2] * (dt * dt) * (((p % 3) === (1 % 2)) ? -1 : 1); //mod1\n            r[1] = (-(paramType0[p][0] / dt - paramType0[p][1] / (dt * dt) - val))\n                / paramType0[p][2] * (dt * dt) * (((p % 3) === (2 % 2)) ? -1 : 1); //mod2\n        }\n\n    } else if (type === 3) {\n\n        if (p >= 6)\n            throw new Error('higher than M22 not available for Super-Growth');\n        let a = 1.074, b = 0.467, c = 0.812;\n        let calc = (extMod) => (val - a * (p + 1) / dt * (1 + b * Math.log10(c / ((p + 1) / dt))) -\n            ((p > 2) ? 0.059 * (p + 1) / dt : 0)) / betaP[p][extMod] * (dt * dt);\n        r[0] = calc(0); //Mii- or MOD1\n        r[1] = calc(1);\n\n    } else if (type === 4 || type === 5) {\n\n        val += (type === 5) ? 0.02 : 0;\n        if (p === 0) {\n            r[0] = (val - 1 / (0.1270 + 0.8606 * dt)) / 0.04575 * (dt * dt); // MOD1\n            r[1] = (val - 1 / (0.1270 + 0.8606 * dt)) / (-0.08802) * (dt * dt);\n        } else if (p === 1) {\n            r[0] = (val - 1 / (0.1174 + 0.4644 * dt)) / (-0.1829) * (dt * dt); //MOD1\n            r[1] = (val - 1 / (0.1174 + 0.4644 * dt)) / 0.1705 * (dt * dt);\n        } else throw new Error('only S11 and S22 are available for SDS-disp. or ssDNA disp.');\n\n    } else throw new Error('invalid type');\n\n    r[0] = r[0].toFixed(4); // 4 digits\n    r[1] = r[0].toFixed(4);\n    if (r[0] > 1 || r[0] < 0)\n        r[0] = -1;\n    if (r[1] > 1 || r[1] < 0)\n        r[1] = -1;\n    return r;\n\n}\n\nfunction getAverage(splitting, wRBM, pLesser, type) {\n\n    // returns null-able average\n\n    let dt = wRBM2Dt(wRBM, pLesser, type);\n\n    if (isMetal(pLesser + 1)) throw new Error('p should be the smaller one');\n    if (type <= 2) {\n        if (pLesser >= 9)\n            throw new Error('higher than S66 not available');\n\n        if (isMetal(pLesser)) {\n\n            let cos3Theta = dt * dt * splitting / 2 * paramType0[pLesser][2];\n            if (cos3Theta < 0 || cos3Theta > 1) return null;\n            try {\n                return (\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, -1) +\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, 0)\n                ) / 2;\n            } catch (err) {\n                if (err.message === 'dt')\n                    return null;\n                else throw err;\n            }\n        } else {\n            let pLarger = pLesser + 1;\n            let delta = (x) => paramType0[pLarger][x] - paramType0[pLesser][x];\n            let mod = 1;\n            let cos3Theta = (splitting * dt * dt - delta(0) * dt + delta(1)) / (\n                paramType0[pLarger][2] * (((pLarger % 3) === (mod % 2)) ? -1 : 1) -\n                paramType0[pLesser][2] * (((pLesser % 3) === (mod % 2)) ? -1 : 1)\n            );\n            if (cos3Theta < 0) {\n                mod = 2;\n                cos3Theta = -cos3Theta;\n            }\n            if (cos3Theta > 1) return null;\n            try {\n                return (\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLarger, type, mod) +\n                    getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, mod)\n                ) / 2;\n            } catch (err) {\n                if (err.message === 'dt')\n                    return null;\n                else throw err;\n            }\n        }\n    } else if (type === 3) {\n        let a = 1.074, b = 0.467, c = 0.812;\n        let sgE = (p) => a * (p + 1) / dt * (1 + b * Math.log10(c / ((p + 1) / dt))) +\n            ((p > 2) ? 0.059 * (p + 1) / dt : 0);\n\n        if (isMetal(pLesser)) {\n\n            let cos3Theta = (splitting) * dt * dt / (betaP[pLesser][1] - betaP[pLesser][0]);\n            if (cos3Theta < 0 || cos3Theta > 1)\n                return null;\n            return (\n                getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, -1) +\n                getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, 0)\n            ) / 2;\n\n        } else {\n\n            let pLarger = pLesser + 1;\n            let mod = 1;\n            if (pLesser >= 6)\n                throw new Error('higher than M22 not available for Super-Growth');\n            let cos3Theta = (splitting + sgE(pLesser) - sgE(pLarger)) * dt * dt / (\n                betaP[pLarger][mod - 1] - betaP[pLesser][mod - 1]\n            );\n            if (cos3Theta < 0 || cos3Theta > 1) {\n                mod = 2;\n                cos3Theta = (splitting + sgE(pLesser) - sgE(pLarger)) * dt * dt / (\n                    betaP[pLarger][mod - 1] - betaP[pLesser][mod - 1]);\n            }\n            if (cos3Theta < 0 || cos3Theta > 1)\n                return null;\n            return (\n                getEnergyFromCos3Theta(dt, cos3Theta, pLarger, type, mod) +\n                getEnergyFromCos3Theta(dt, cos3Theta, pLesser, type, mod)\n            ) / 2;\n        }\n\n    } else if (type === 4 || type === 5) {\n\n        if (pLesser !== 0)\n            throw new Error('only S11 and S22 are available for SDS-disp. or ssDNA disp.');\n        let mod = 1;\n        let cos3Theta = (splitting - (1 / (0.1174 + 0.4644 * dt) - 1 / (0.1270 + 0.8606 * dt)))\n            * dt * dt / (-0.1829 - 0.04575);\n\n        if (cos3Theta > 1 || cos3Theta < 0) {\n            mod = 2;\n            cos3Theta = (splitting - (1 / (0.1174 + 0.4644 * dt) - 1 / (0.1270 + 0.8606 * dt)))\n                * dt * dt / (0.1705 - -0.08802);\n        }\n        if (cos3Theta > 1 || cos3Theta < 0)\n            return null;\n\n        return (\n            getEnergyFromCos3Theta(dt, cos3Theta, 1, type, mod) +\n            getEnergyFromCos3Theta(dt, cos3Theta, 0, type, mod)\n        ) / 2;\n    }\n    else throw new Error('invalid type');\n}\n\nfunction getList(pLesser, type) {\n\n    let li = [];\n    const nMin = 5, nMax = 50;\n\n    if (!isMetal(pLesser))\n    {\n        if (isMetal(pLesser + 1)) throw new Error('p should be the smaller one, e.g. S11 rather than S22');\n        for (let n = nMin; n < nMax; n++)\n            for (let m = 0; m <= n; m++) {\n\n            if (2 * n + m > seriesThreshold) break;\n            try {\n                if (!isMetal(n, m)) {\n                    let dl = getEnergy(Dt(n, m, type), Theta(n, m), pLesser, type, Mod(n, m));\n                    let dh = getEnergy(Dt(n, m, type), Theta(n, m), pLesser + 1, type, Mod(n, m));\n                    li.push([ n, m, (dh + dl) / 2, (dh - dl) ]);\n                }\n            } catch (err) {\n                if (err.message !== 'dt') throw err;\n            }\n        }\n    } else {\n        for (let n = nMin; n < nMax; n++)\n            for (let m = 0; m <= n; m++) {\n\n            if (2 * n + m > seriesThreshold) break;\n            try {\n                if (isMetal(n, m)) {\n                    let dl = getEnergy(Dt(n, m, type), Theta(n, m), pLesser, type, -1);\n                    let dh = getEnergy(Dt(n, m, type), Theta(n, m), pLesser, type, 0);\n                    li.push([ n, m, (dh + dl) / 2, (dh - dl) ]);\n                }\n            } catch (err) {\n                if (err.message !== 'dt') throw err;\n            }\n        }\n    }\n    return li;\n}\n\nfunction getRBMArray(pLesser, type) {\n\n    let d = { rbmLabel: [], rbm: [] }; // return\n\n    const cos3ThetaMax = 60;\n    const wRBMMin = 70, wRBMMax = 350;\n    if (!isMetal(pLesser) && isMetal(pLesser + 1))\n        throw new Error('p should be the smaller one, e.g. S11 rather than S22');\n\n    for (let rbm = wRBMMin; rbm <= wRBMMax; rbm += 10) {\n\n        let dt = wRBM2Dt(rbm, pLesser, type);\n        let t = [];\n        try {\n            if (isMetal(pLesser)) {\n                let plus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, 0);\n                let minus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, -1);\n                t.push([ (plus + minus) / 2, plus - minus ]);\n                plus = getEnergyFromCos3Theta(dt, -cos3ThetaMax, pLesser, type, 0);\n                minus = getEnergyFromCos3Theta(dt, -cos3ThetaMax, pLesser, type, -1);\n                t.push([ (plus + minus) / 2, plus - minus ]);\n                d.rbmLabel.push(rbm);\n                d.rbm.push(t);\n            } else {\n                let plus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser + 1, type, 1); //should it be higher?\n                let minus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, 1);\n                t.push([ (plus + minus) / 2, plus - minus ]);\n                plus = getEnergyFromCos3Theta(dt, 0, pLesser + 1, type, 2);\n                minus = getEnergyFromCos3Theta(dt, 0, pLesser, type, 2);\n                t.push([ (plus + minus) / 2, plus - minus ]);\n                plus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser + 1, type, 2);\n                minus = getEnergyFromCos3Theta(dt, cos3ThetaMax, pLesser, type, 2);\n                t.push([ (plus + minus) / 2, plus - minus ]);\n                d.rbmLabel.push(rbm);\n                d.rbm.push(t);\n            }\n        }\n        catch (err)\n        {\n            if (err.message === 'dt') break;\n            else throw err;\n        }\n    }\n\n    return d;\n}\n","\n'use strict';\n\nlet isNumber = e => isNaN(parseFloat(e));\nfunction getPlotParams(params) {\n  let decimalDigits = (d) => d.split('.')[1].length;\n\n  if (isNumber(params.val1) && isNumber(params.val2)) {\n    throw new Error('Unauthorized Access');\n  } else if (isNumber(params.val1) || isNumber(params.val2)) {\n    if (isNumber(params.rbm)) throw new Error('Unauthorized Access');\n    params.uncertainty = 2.0 / Math.pow(10, decimalDigits(isNumber(params.val1) ? params.val2 : params.val1 ));\n    return E1R1(params);\n  } else {\n    params.uncertainty = 2.0 / Math.pow(10,\n      Math.min(decimalDigits(params.val1), decimalDigits(params.val2))\n    );\n    return E2(params);\n  }\n}\n\nfunction E1R1(params) {\n\n  let p1 = (isNumber(params.val1) ? params.p2 : params.p1), type = params.type, p = p1ToP[p1]; // int\n  let val = parseFloat(isNumber(params.val1) ? params.val2 : params.val1); // float\n  let wRBM = parseFloat(params.rbm); // float, integrity checked in getPlotParam\n\n  let dt = wRBM2Dt(wRBM, p, type);\n  let cos = getCos3Theta(val, dt, p, type);\n  let resultString = '';\n  let error = () => Assign({\n    bluePoint: null,\n    point: [ val, 0.23 ],\n    pLesser: pToLesser[p],\n    type: type,\n    pointType: 'none',\n    p1Lesser: p1ToLesser(p1),\n    resultString: resultString\n  });\n\n  if (cos[0] === -1 && cos[1] === -1) {\n    resultString += 'Invalid input: out of range.';\n    return error();\n  }\n\n  let pAnother, modAnother;\n  if (isMetal(p)) {\n    if (p1 % 4 - 3 !== (cos[0] === -1 ? 0 : -1)) {\n      resultString += `Invalid input: You may have mistaken ${p1Arr[p1 + 5 - (p1 % 4) * 2]} for ${p1Arr[p1]}.`;\n      return error();\n    }\n    pAnother = p;\n    modAnother = cos[0] === -1 ? -1 : 0;\n  }\n  else {\n    pAnother = isMetal(p + 1) ? p - 1 : p + 1;\n    modAnother = cos[0] === -1 ? 2 : 1; // === mod1\n  }\n\n  let valAnother;\n  try {\n    valAnother = getEnergyFromCos3Theta(dt, cos[0] === -1 ? cos[1] : cos[0], pAnother, type, modAnother);\n  }\n  catch (err) {\n    if (err.message === 'dt') {\n      resultString += 'Invalid input: out of range, diameter too small.';\n      return error();\n    }\n    throw err;\n  }\n  if ((isMetal(p) && (modAnother === -1)) || (!isMetal(p) && (p > pAnother))) {\n    [p, pAnother] = [pAnother, p];\n    [val, valAnother] = [valAnother, val];\n  }\n  let x = (val + valAnother) / 2, y = valAnother - val;\n  return Assign({\n    bluePoint: null,\n    point: [x, y],\n    pLesser: p,\n    type: type,\n    pointType: 'green',\n    p1Lesser: p1ToLesser(p1),\n    resultString: resultString\n  }, modAnother);\n\n}\n\n\nfunction E2(params) {\n\n  let resultString = '';\n  let p1 = params.p1, p2 = params.p2, type = params.type; // int\n  let val1 = parseFloat(params.val1), val2 = parseFloat(params.val2); // float, integrity checked in getPlotParams\n  let p_1 = p1ToP[p1], p_2 = p1ToP[p2]; // int\n  let rbm = params.rbm; // string\n\n  // don't use 'with' block\n  if (p1 > p2) {\n    [p_1, p_2] = [p_2, p_1];\n    [val1, val2] = [val2, val1];\n    [p1, p2] = [p2, p1];\n  }\n\n  if (isMetal(p_2) !== isMetal(p_1)) {\n    throw new Error('invalid form submission');\n  }\n\n  if (p2 - p1 === 1) {\n    let bluePoint = null;\n    if (!isNumber(rbm)) {\n      let average = getAverage(val2 - val1, parseFloat(params.rbm), p_1, type);\n      if (average !== null) {\n        bluePoint = [average, val2 - val1];\n      }\n      else {\n        resultString += 'Invalid input: RBM value out of range. Only transition energies are processed. <br/ >';\n      }\n    }\n    return Assign({\n      point: [ (val1 + val2) / 2, val2 - val1 ],\n      pLesser: p_1,\n      type: type,\n      pointType: 'red',\n      bluePoint: bluePoint,\n      p1Lesser: p1,\n      resultString: resultString\n    });\n  }\n\n}\n\nfunction Assign(params, mod = -1) {\n\n  // params: plotParams\n  // x: average y: splitting\n\n  let uncertainty = params.uncertainty;\n  let dxMin = -1, dxMax = -1, dyMin = -1, dyMax = -1;\n  let Dist = (x1, y1, x2, y2) => Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) * 25);\n  let Dist_ = (e) => Dist(e[2], e[3], params.point[0], params.point[1]);\n  let deltaX = 0.6,\n    maxY = isMetal(params.pLesser) ? 0.6 : params.point[1] + 0.6,\n    minY = isMetal(params.pLesser) ? -0.1 : params.point[1] - 0.6;\n\n  function setBounds(dxMin_, dxMax_, dyMin_, dyMax_) {\n    dxMin = dxMin_;\n    dxMax = dxMax_;\n    dyMin = dyMin_;\n    dyMax = dyMax_;\n  }\n\n  // https://github.com/mihaifm/linq, many thanks to you!\n\n  params.all = Enumerable.from(getList(params.pLesser, params.type))\n    .where(e => (e[2] >= params.point[0] - deltaX && e[2] <= params.point[0] + deltaX &&\n      e[3] <= maxY && e[3] >= minY))\n    .toArray();\n\n  let query = Enumerable.from(params.all)\n    .where(e => (\n      (mod === -1 || isMetal(params.pLesser) || mod === Mod(e[0], e[1])) &&\n      params.point[0] - e[2] >= dxMin && params.point[0] - e[2] <= dxMax &&\n      params.point[1] - e[3] >= dyMin && params.point[1] - e[3] <= dyMax\n    ));\n\n  setBounds(-uncertainty, uncertainty, -uncertainty, uncertainty);\n  let uc = query.toArray(); // query once to get uncertainty range\n\n  function processOutput() {\n    params.result = query.orderBy(Dist_).toArray();\n    for (let i = 0; i < params.result.length; i++)\n      params.resultString += `\n        <b>(${Math.round(params.result[i][0])},${Math.round(params.result[i][1])})</b>\n        ${i !== params.result.length - 1 ? ', ' : ''}`;\n    params.resultString += '</span>';\n  }\n\n  if (params.pointType === 'none') {\n    params.ar = AssignResult.error;\n    params.result = [];\n    return params;\n  }\n\n  if (uncertainty > 0.2) {\n    params.resultString = 'Input uncertainty too large. Please give more significant figures.';\n    params.ar = AssignResult.error;\n    params.result = [];\n    return params;\n  }\n\n  if (params.pointType === 'red') {\n    if (params.bluePoint != null) {\n      if (params.bluePoint[0] - params.point[0] < 0.02) setBounds(-0.008, 0.008, -0.015, 0.015);\n      else setBounds(-0.030, -0.005, -0.015, 0.015); // don't change at this moment\n    } else setBounds(-0.020, 0.008, -0.015, 0.015);\n\n    if (query.count() === 1 && uc.length <= 1) {\n      params.ar = AssignResult.accurate;\n      params.resultString += 'The assignment result is:<br /><span style=\"font-size: 28px;\">';\n      processOutput();\n      return params;\n    }\n    setBounds(-0.040, 0.0126, -0.030, 0.030);\n  } else setBounds(-0.070, 0.070, -0.040, 0.040);\n\n  query.union(uc);\n\n  if (query.count() > 0) {\n    params.ar = AssignResult.possible;\n    params.resultString += 'The likely assignments include:<br /><span style=\"font-size: 28px;\">';\n    processOutput();\n    return params;\n  }\n\n  // use the green criteria and query again for no match.\n  // and it's easy to see that green point, if not returned in the previous step,\n  // will not give results in this step.\n\n  setBounds(-0.070, 0.070, -0.040, 0.040);\n  let tmp = Enumerable.from(params.all).orderBy(Dist_).toArray();\n  if (Dist_(tmp[0]) / Dist_(tmp[1]) <= 0.5 && query.count() !== 0) {\n    params.ar = AssignResult.impossible;\n    query = Enumerable.from([ tmp[0] ]);\n    params.resultString += 'No match. The most possible assignment result is:<br /><span style=\"font-size: 28px;\">';\n    processOutput();\n    return params;\n  }\n\n  params.ar = AssignResult.error;\n  params.resultString = 'Invalid input: out of range. Please check your input.';\n  params.result = [];\n  return params;\n}\n\nfunction processOutput(params) {\n\n  // process RBM\n\n  const yMax = isMetal(params.pLesser) ? 0.51 : params.point[1] + 0.4;\n  const xMin = params.point[0] - 0.5, xMax = params.point[0] + 0.5;\n  let s = getRBMArray(params.pLesser, params.type); // {rbm, rbmLabel}\n  let rbm = [];\n  let rbmLabel = [];\n  let rbmPos = [];\n  let between = (xy, r1, r2) => (xy >= r1 && xy <= r2) || (xy >= r2 && xy <= r1);\n  for (let i = 0 ; i < s.rbm.length; i++) {\n    let a = s.rbm[i];\n    let t;\n    if (a.length === 2)\n      t = (a[0][0] - a[1][0]) * (yMax - a[1][1]) / (a[0][1] - a[1][1]) + a[1][0];\n    else {\n      let u;\n      if (between(yMax, a[1][1], a[0][1]))\n        u = 0;\n      else // if between(a[1][1], a[2][1])\n        u = 2;\n      t = (a[u][0] - a[1][0]) * (yMax - a[1][1]) / (a[u][1] - a[1][1]) + a[1][0];\n    }\n    if (between(t, xMax, xMin)) {\n      rbm.push(s.rbm[i]);\n      rbmLabel.push(s.rbmLabel[i]);\n      rbmPos.push(t);\n    }\n  }\n  params.rbm = rbm;\n  params.rbmLabel = rbmLabel;\n  params.rbmPos = rbmPos;\n\n  // process all\n\n  let all = params.all; // you know, lazy evaluation\n  let q = Enumerable.from(all)\n    .groupBy(\n      e => 2 * e[0] + e[1], // key\n      e => e, // group element\n      (key, group) => ({ key: key, value: group.orderBy(e => e[0]).toArray() })\n    ); // use default compare method\n\n  params.all = q.select(e => e.value.map(ee => [ee[2], ee[3]])).toArray();\n  params.allLabel = q.select(e => e.value.map(ee => [ee[0], ee[1]])).toArray();\n\n  // process result\n\n  let result = params.result;\n  params.result = result.map(e => [e[2], e[3]]);\n  params.resultLabel = result.map(e => [e[0], e[1]]);\n\n  params.isMetal = isMetal(params.pLesser);\n  params.yAxisLabel = `\\\\(${p1Arr_raw[params.p1Lesser + 1]}-${p1Arr_raw[params.p1Lesser]}\\\\ (\\\\mathrm{eV})\\\\)`;\n  params.xAxisLabel = `\\\\((${p1Arr_raw[params.p1Lesser + 1]}+${p1Arr_raw[params.p1Lesser]})/2\\\\ (\\\\mathrm{eV})\\\\)`;\n\n\n  // select g.OrderBy(elem => elem[0]);\n  // note that average energy may not increase monotonously as n in (n,m) increases.\n  // thus elem => elem[2] is wrong.\n  // test: S11 = 1.420, S22 = 2.134 as (6,4), see branch 2n + m = 16\n\n\n  return params;\n}\n","\r\n'use strict';\r\n\r\nfunction drawPlot(placeholder, params) {\r\n\r\n    let defaultRadius = 4, xMin = params.point[0] - 0.5, xMax = params.point[0] + 0.5;\r\n    let yMin = params.isMetal ? -0.01 : params.point[1] - 0.4, yMax = params.isMetal ? 0.45 : params.point[1] + 0.4;\r\n    let font = {\r\n        size: 20,\r\n        lineHeight: 20,\r\n        family: \"serif\"\r\n    };\r\n    let options = {\r\n        xaxis: {\r\n            // aver\r\n            show: true,\r\n            position: \"bottom\",\r\n            min: xMin,\r\n            max: xMax,\r\n            font: font,\r\n            tickLength: 10,\r\n            tickColor: \"rgb(255, 0, 0)\",\r\n            color: \"rgb(255, 0, 0)\"\r\n        },\r\n        yaxis: {\r\n            show: true,\r\n            min: yMin,\r\n            max: yMax,\r\n            font: font,\r\n            tickLength: 10,\r\n            tickColor: \"rgb(0, 0, 0)\",\r\n            color: \"rgb(0, 0, 0)\"\r\n        },\r\n        series: {\r\n            hoverable: true\r\n            // shadowSize: 0\r\n        },\r\n        grid: {\r\n            borderColor: {\r\n                top: \"rgb(0, 0, 255)\",\r\n                bottom: \"rgb(255, 0, 0)\",\r\n                left: \"rgb(0, 0, 0)\",\r\n                right: \"rgb(0, 0, 0)\"\r\n            },\r\n            hoverable: true,\r\n            minBorderMargin: 0\r\n        }\r\n    };\r\n\r\n    let series = [];\r\n    for (let i = 0; i < params.rbm.length; i++)\r\n        series.push({\r\n            color: \"rgb(208, 208, 208)\", // use the shadow\r\n            data: params.rbm[i],\r\n            shadowSize: 5,\r\n            hoverable: false\r\n        });\r\n    let laser = [1240 / 785, 1240 / 633, 1240 / 532];\r\n    let laser_color = [\"rgb(136, 136, 136)\", \"rgb(245, 0, 0)\", \"rgb(12, 127, 15)\"];\r\n\r\n    for (let i = 0; i < laser.length; i++) {\r\n        series = series.concat([{\r\n            id: \"laser\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, 2 * (-10 - laser[i])], [10, 2 * (10 - laser[i])]],\r\n            shadowSize: 0\r\n        }, {\r\n            id: \"laser_minus\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, -2 * (-10 - laser[i])], [10, -2 * (10 - laser[i])]],\r\n            shadowSize: 0\r\n        }, {\r\n            fillBetween: \"laser\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, 2 * (-10 - (laser[i] - 0.1))], [10, 2 * (10 - (laser[i] - 0.1))]], // 100 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }, {\r\n            fillBetween: \"laser_minus\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, -2 * (-10 - (laser[i] - 0.1))], [10, -2 * (10 - (laser[i] - 0.1))]], // 100 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }, {\r\n            fillBetween: \"laser\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, 2 * (-10 - (laser[i] + 0.1))], [10, 2 * (10 - (laser[i] + 0.1))]], // 200 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }, {\r\n            fillBetween: \"laser_minus\" + i.toString(),\r\n            color: laser_color[i],\r\n            data: [[-10, -2 * (-10 - (laser[i] + 0.1))], [10, -2 * (10 - (laser[i] + 0.1))]], // 200 meV\r\n            lines: {\r\n                fill: 0.3,\r\n                lineWidth: 0\r\n            }\r\n        }]);\r\n    }\r\n\r\n    for (let i = 0; i < params.all.length; i++) {\r\n        let mod_i = (params.allLabel[i][0][0] * 2 + params.allLabel[i][0][1]) % 3;\r\n        series.push({\r\n            color: params.isMetal || mod_i === 2 ? \"rgb(0, 0, 0)\" : \"rgb(255, 0, 0)\",\r\n            data: params.all[i],\r\n            points: {\r\n                show: true,\r\n                radius: params.isMetal ? 78 / 0.1 * 0.015 / 2  : defaultRadius, //15 meV\r\n                symbol: params.isMetal ? \"circle\" : mod_i === 2 ? \"square\" : \"triangle\"\r\n            },\r\n            lines: {\r\n                show: true\r\n            },\r\n            point_labels: params.allLabel[i],\r\n            hoverable: true\r\n        });\r\n    }\r\n    for (let i = 0; i < params.result.length; i++) {\r\n        let mod_i = (params.resultLabel[i][0] * 2 + params.resultLabel[i][1]) % 3;\r\n        series.push({\r\n            color: params.isMetal || mod_i === 2 ? \"rgb(0, 0, 0)\" : \"rgb(255, 0, 0)\",\r\n            data: [params.result[i]],\r\n            points: {\r\n                show: true,\r\n                radius: params.isMetal ? 78 / 0.1 * 0.015 / 2 : defaultRadius,\r\n                symbol: params.isMetal ? \"circle\" : mod_i === 2 ? \"square\" : \"triangle\",\r\n                fill: true,\r\n                fillColor: params.isMetal || mod_i === 2 ? \"rgb(0, 0, 0)\" : \"rgb(255, 0, 0)\"\r\n            },\r\n            point_labels: [params.resultLabel[i]],\r\n            hoverable: true\r\n        });\r\n    }\r\n\r\n\r\n    // blue point is diamond, otherwise square\r\n    if (params.pointType !== \"none\") {\r\n        series.push({\r\n            color: params.pointType === \"green\" ? \"rgb(12, 180, 15)\" : \"rgb(255, 0, 0)\",\r\n            data: [params.point],\r\n            points: {\r\n                show: true,\r\n                symbol: params.pointType === \"green\" ? \"diamond\" : \"square\",\r\n                radius: defaultRadius,\r\n                fill: true,\r\n                fillColor: params.pointType === \"green\" ? \"rgba(0, 0, 0, 0)\" : \"rgb(255, 0, 0)\"\r\n            },\r\n            hoverable: false\r\n        });\r\n    }\r\n    if (params.bluePoint !== null)\r\n        series.push({\r\n            color: \"rgb(0, 0, 255)\",\r\n            data: [params.bluePoint],\r\n            points: {\r\n                show: true,\r\n                symbol: \"diamond\",\r\n                radius: defaultRadius,\r\n                fill: true,\r\n                fillColor: \"rgba(0, 0, 0, 0)\"\r\n            },\r\n            hoverable: false,\r\n            shadowSize: 0\r\n        });\r\n\r\n    let $placeholder = $(\"#\" + placeholder);\r\n    let plot = $.plot($placeholder, series, options);\r\n\r\n    let previousPoint = null;\r\n    $placeholder.bind(\"plothover\", function(event, pos, item) {\r\n        if (item) {\r\n            if (previousPoint !== item.dataIndex) {\r\n                previousPoint = item.dataIndex;\r\n                $(\"#tooltip\").remove();\r\n                showTooltip(item.pageX, item.pageY,\r\n                    \"(\" + item.series.point_labels[item.dataIndex][0] + \", \" +\r\n                    item.series.point_labels[item.dataIndex][1] + \")\");\r\n            }\r\n        } else {\r\n            $(\"#tooltip\").remove();\r\n            previousPoint = null;\r\n        }\r\n    });\r\n\r\n    if (params.isMetal) {\r\n        for (let i = 0; i < params.all.length; i++) {\r\n            let s = Math.floor(params.all.length / 2);\r\n            let p = params.all[i][params.all[i].length - 1];\r\n            let p1 = params.allLabel[i][params.all[i].length - 1];\r\n            let o = plot.pointOffset({ x: p[0], y: p[1] });\r\n            let axes = plot.getAxes();\r\n            let xaxis = axes.xaxis, yaxis = axes.yaxis;\r\n            if (i % 2 === s % 2 && p[0] <= xaxis.max && p[0] >= xaxis.min &&\r\n                p[1] <= yaxis.max - 0.05 && p[1] >= yaxis.min + 0.05)\r\n                $placeholder.append(`\r\n                    <div class='series_label' style='left: ${o.left - (i === s ? 60 : 10)}px; top: ${o.top - 30}px;'>\r\n                        <p>${i === s ? \"2<i>n</i>+<i>m</i>=\" : \"\"}${p1[0] * 2 + p1[1]}</p>\r\n                    </div>\r\n                `);\r\n        }\r\n    } else {\r\n        let mid = Math.round(params.all.length / 2);\r\n        let pMid = params.allLabel[mid][params.all[mid].length - 1];\r\n        let divMid = Math.floor((pMid[0] * 2 + pMid[1]) / 3); //use ceil, for right is scattered, left is dense\r\n\r\n        for (let i = 0; i < params.all.length; i++) {\r\n            let p = params.all[i][params.all[i].length - 1];\r\n            let p1 = params.allLabel[i][params.all[i].length - 1];\r\n            let o = plot.pointOffset({ x: p[0], y: p[1] });\r\n            let axes = plot.getAxes();\r\n            let xaxis = axes.xaxis, yaxis = axes.yaxis;\r\n            let div = Math.round((p1[0] * 2 + p1[1]) / 3);\r\n            let mod = (p1[0] * 2 + p1[1]) % 3;\r\n            if (divMid % 2 === div % 2) {\r\n                if (p[0] <= xaxis.max - 0.02 && p[0] >= xaxis.min + 0.02 && p[1] <= yaxis.max - 0.1 &&\r\n                    p[1] >= yaxis.min + 0.1) {\r\n                    let dA = {\r\n                        color: mod === 1 ? \"#FF0000\" : \"#000000\",\r\n                        left: o.left - (divMid === div ? 60 : 10),\r\n                        top: o.top - (mod === 1 ? -15 : (\r\n                            divMid === div && p[1] <= yaxis.max - 0.15 && p[1] >= yaxis.min + 0.18 ? 60 : 30\r\n                            )\r\n                        ),\r\n                        c1: divMid === div\r\n                            ? (\r\n                                (mod === 2 && p[1] <= yaxis.max - 0.15\r\n                                    ? \"<b>MOD2</b><br/>\"\r\n                                    : \"\")\r\n                                + \"2<i>n</i>+<i>m</i>=\"\r\n                            )\r\n                            : \"\",\r\n                        c2: p1[0] * 2 + p1[1],\r\n                        c3: divMid === div && mod === 1 && p[1] >= yaxis.min + 0.12\r\n                            ? \"<br/><b>MOD1</b>\"\r\n                            : \"\"\r\n                    };\r\n                    $placeholder.append(`\r\n                        <div class='series_label' style='color: ${dA.color}; left: ${dA.left}px; top: ${dA.top}px;'>\r\n                            <p>${dA.c1}${dA.c2}${dA.c3}</p>\r\n                        </div>\r\n                    `);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < params.rbm.length; i++) {\r\n        if (i % 2 === 0 || params.rbm.length === 1) {\r\n            let o1 = plot.pointOffset({ x: params.rbmPos[i], y: yMax });\r\n            $placeholder.append(`\r\n                <div class='rbm_label' style='left: ${o1.left - 15}px; top: ${o1.top - 30}px;'>\r\n                    <p>${params.rbmLabel[i]}</p>\r\n                </div>\r\n            `);\r\n        }\r\n    }\r\n}\r\n\r\nfunction showTooltip(x, y, contents) {\r\n    $(`\r\n        <div id='tooltip' class='tooltip right in'>\r\n            <div class='tooltip-arrow' style='top: 50%;'></div>\r\n            <div class='tooltip-inner'>${contents}</div>\r\n        </div>\r\n    `)\r\n        .css({\r\n            display: \"block\",\r\n            top: y,\r\n            left: x\r\n        }).appendTo(\"body\").fadeIn(200);\r\n}\r\n\r\n","\n'use strict';\n\nlet timeLoad = performance.now(); // before load\nlet timeStartup;\n\n$.getScript(navigator.language.substr(0, 2).toLowerCase() !== \"zh\"\n  ? \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/MathJax.js\"\n  : \"https://cdn.bootcss.com/mathjax/2.7.3/MathJax.js\"\n  + \"?config=TeX-AMS_SVG-full,Safe&locale=en\", function () {\n  timeStartup = performance.now();\n  console.log(\"MathJax load takes \" + (timeStartup - timeLoad).toFixed(2));\n});\n\nlet urlParams = {};\n(window.onpopstate = function () {\n  let match,\n    pl     = /\\+/g,  // Regex for replacing addition symbol with a space\n    search = /([^&=]+)=?([^&]*)/g,\n    decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); },\n    query  = window.location.search.substring(1);\n\n  urlParams = {};\n  while (match = search.exec(query))\n    urlParams[decode(match[1])] = decode(match[2]);\n})();\n\nif( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {\n  $('.selectpicker').selectpicker('mobile');\n}\n\nlet $body = $(\"body\");\n\n/*\n * Step 1\n */\n\nif ($body.hasClass(\"Step1\")) {\n\n  let $selectType = $(\"#slType\");\n  for (let i = 0; i < typeArr.length; i++)\n    $selectType.append(`<option value=\"${i}\">${typeArr[i]}</option>`);\n\n  $selectType.selectpicker('val', 0)\n    .selectpicker('refresh')\n    .on(\"loaded.bs.select\", clearTitle)\n    .on('changed.bs.select', clearTitle);\n\n}\n\n/*\n * Step 2\n */\n\nif ($body.hasClass(\"Step2\")) {\n\n  let type = parseInt(urlParams['Type']);\n  // '', ' ' will be converted to NaN in this process.\n  if (isNaN(type) || type > 5 || type < 0)\n    location.href = \"Step1.html\";\n\n  $(\"#title\")[0].innerHTML += '<small>' + typeArr[type] + '</small>';\n\n  $(\"#dataTables\").find(`.type${type}`).removeClass('hidden');\n\n  let $selectP1 = $(\"#slP1\"), $selectP2 = $(\"#slP2\"), $selectType = $(\"#slType\");\n  let $selectP1P2 = $(\"#slP1, #slP2\");\n\n  // generate options\n\n  for (let i = 0; i < p1Arr.length; i++) {\n    if (type >= 3) {\n      let threshold = (type === 3 ? 8 : 2);\n      if (i >= threshold) break;\n    }\n    $selectP1P2.append(`<option value=\"${i}\">${p1Arr[i]}</option>`);\n  }\n  for (let i = 0; i < typeArr.length; i++)\n    $selectType.append(`<option value=\"${i}\">${typeArr[i]}</option>`);\n\n  $selectType.selectpicker('val', type);\n  $(\".selectpicker\").selectpicker('refresh');\n\n  $(\"select\").on(\"loaded.bs.select\", clearTitle);\n  $selectP1.on('changed.bs.select', function (e, index) {\n    let i = index - 1;\n    clearTitle(); // only when slP1 changes the title have to be cleared; only active select\n    $selectP2.find(\"option\").each(function () {\n      let value = parseInt($(this).val());\n      if (i % 2 === 0 && value === i + 1 || i % 2 === 1 && value === i - 1)\n        $selectP2.selectpicker('val', value);\n    });\n  });\n\n}\n\n\n/*\n * Step 3\n */\n\nif ($body.hasClass(\"Step3\")) {\n\n  // check integrity\n  for (let i of ['Type', 'P1', 'P2', 'Val1', 'Val2', 'RBM']) {\n    if (urlParams[i] === undefined) {\n      location.href = 'Step1.html';\n      break;\n    }\n  }\n\n  let params = {\n    type: parseInt(urlParams['Type']), // int\n    p1: parseInt(urlParams['P1']), // int\n    p2: parseInt(urlParams['P2']), // int\n    val1: urlParams['Val1'], // empty-able str\n    val2: urlParams['Val2'], // empty-able str\n    rbm: urlParams['RBM'] // empty-able str\n  };\n\n  let valueBetween = (xy, a, b) => (xy >= a || xy <= b);\n  let val1_ = parseFloat(params.val1), val2_ = parseFloat(params.val2), rbm_ = parseFloat(params.rbm);\n  // also, '' and ' ' will be converted to NaN in this process.\n  let emptyNum = Number(isNaN(val1_)) + Number(isNaN(val2_)) + Number(isNaN(rbm_));\n  if (emptyNum >= 2 || isNaN(params.type) || isNaN(params.p1) || isNaN(params.p2) ||\n    !isNaN(val1_) && (val1_ < 0 || val1_ > 4) || !isNaN(val2_) && (val2_ < 0 || val2_ > 4) ||\n    !isNaN(rbm_) && (rbm_ < 30 || rbm_ > 500) || !valueBetween(params.type, 0, 5) ||\n    !valueBetween(params.p1, 0, 11) || !valueBetween(params.p2, 0, 11)\n  )\n    location.href = 'Step1.html';\n\n  // end validation\n\n  $(\"#title\")[0].innerHTML += '<small>' + typeArr[params.type] + '</small>';\n\n  let plotParams = processOutput(getPlotParams(params));\n\n  $(\"#resultDiv\")\n    .addClass(plotParams.ar !== AssignResult.error ? \"alert-success\" : \"alert-danger\")\n    .html(plotParams.resultString);\n  $(\"#yAxisLabel\").html(plotParams.yAxisLabel);\n  $(\"#xAxisLabel\").html(plotParams.xAxisLabel);\n  $(\"#\" + plotParams.pointType + \"Legend\").css(\"display\", \"\");\n  if (plotParams.bluePoint !== null)\n    $(\"#blueLegend\").css(\"display\", \"\");\n\n  $(drawPlot(\"plot-placeholder\", plotParams));\n\n}\n\n// functions\n\nfunction clearTitle() { // used in Step1 and Step2\n\n  $(\".bootstrap-select\").find(\"button\").removeAttr(\"title\");\n}\n\nfunction validate(form) { // used in Step2\n\n  let $hint = $(\"#hint\");\n  let invokeError = (msg) => {\n    $hint.addClass(\"alert-danger\")\n      .html(`<span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span> ${msg}`);\n    return false;\n  };\n  let val1_ = parseFloat(form.Val1.value);\n  let val2_ = parseFloat(form.Val2.value);\n  let rbm_ = parseInt(form.RBM.value);\n  let emptyNum = Number(isNaN(val1_)) + Number(isNaN(val2_)) + Number(isNaN(rbm_));\n  if (emptyNum >= 2) return invokeError(\"At least 2 values are required.\");\n  else {\n    if (!isNaN(val1_) && (val1_ < 0 || val1_ > 4) ||\n      !isNaN(val2_) && (val2_ < 0 || val2_ > 4) ||\n      !isNaN(rbm_) && (rbm_ < 30 || rbm_ > 500))\n      return invokeError(\"Please input valid value.\");\n    if ($(\"#slP1\").selectpicker(\"val\") === \"\")\n      return invokeError(\"Please select the type of transition energy.\");\n\n    $(\".selectpicker\").removeAttr(\"disabled\");\n    return true;\n  }\n}\n\nfunction changeEdit(p1_lesser, val1, val2) { // used in Step2\n\n  $(\"#slP1\").selectpicker('val', p1_lesser);\n  $(\"#slP2\").selectpicker('val', p1_lesser + 1);\n  $(\"#edVal1\").val(val1);\n  $(\"#edVal2\").val(val2);\n}\n\nfunction calculate(form) { // used in Step2\n\n  let $calcHint = $('#calculatorHint');\n  let $calcResult = $('#calcResult');\n\n  let invokeError = () => {\n    $calcHint.html(`\n      <div class=\"alert-danger hint\">\n        <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\n        No valid result.\n      </div>\n    `);\n    $calcResult.html('');\n  };\n\n  let n = parseInt(form.NCalc.value), m = parseInt(form.MCalc.value), t = parseInt(urlParams['Type']);\n  if (n < m) [n, m] = [m, n];\n  if (isNaN(n) || isNaN(m) || n <= 6 || m <= 0 || 2 * n + m > seriesThreshold) {\n    invokeError();\n    return false;\n  }\n\n  $calcHint.html('');\n  let $resultList = $(`<tbody></tbody>`);\n  let $plotList = $('<div></div>'); // empty wrapper\n  $calcResult.html('')\n    .append($('<table class=\"table table-striped math\" id=\"calcResultList\"></table>').append($resultList))\n    .append($plotList);\n\n  $resultList.append(`<tr><td>\\\\(d_t\\\\)</td><td>\\\\( ${Dt(n, m, t).toFixed(3).toString()} \\\\ \\\\mathrm{nm}\\\\)</td></tr>`);\n\n  // generate d_t and RBM information\n\n  generateRBMCalculationResult(n, m, t, $resultList);\n\n  // do energy calculation\n\n  let calculatedEnergy = new Array(12);\n  for (let p1 = 0; p1 < 12; p1++) {\n    if (isMetal(p1ToP[p1]) !== isMetal(n, m)) {\n      calculatedEnergy[p1] = -1;\n      continue;\n    }\n    try {\n      calculatedEnergy[p1] = getEnergy(Dt(n, m, t), Theta(n, m), p1ToP[p1], t, isMetal(n, m) ? p1 % 2 - 1 : Mod(n, m))\n        .toFixed(3).toString();\n    }\n    catch (err) {\n      calculatedEnergy[p1] = -1;\n    }\n  }\n\n  // apply results to plot\n\n  let validResultNumber = 0;\n\n  for (let p1 = 0; p1 < 12; p1 += 2) {\n\n    // assert that there are results for both P1 = 2k and (2k + 1).\n    // note that for (9,7) the S66 doesn't work due to too small d_t which\n    // caused 1st derivative issue, but S55 is valid.\n\n    if (calculatedEnergy[p1] === -1 || calculatedEnergy[p1 + 1] === -1)\n      continue;\n\n    validResultNumber++;\n\n    $resultList.append(\n      $(`<tr><td>${p1Arr[p1]}</td><td>\\\\(${calculatedEnergy[p1]}\\\\ \\\\mathrm{eV}\\\\)</td></tr>`)\n        .click(() => changeEdit(p1, calculatedEnergy[p1], calculatedEnergy[p1 + 1]))\n        .css('cursor', 'pointer')\n    ).append(\n      $(`<tr><td>${p1Arr[p1 + 1]}</td><td>\\\\(${calculatedEnergy[p1 + 1]}\\\\ \\\\mathrm{eV}\\\\)</td></tr>`)\n        .click(() => changeEdit(p1, calculatedEnergy[p1], calculatedEnergy[p1 + 1]))\n        .css('cursor', 'pointer')\n    );\n\n    let params = {\n      type: t, // int\n      p1: p1, // int\n      p2: p1 + 1, // int\n      val1: calculatedEnergy[p1], // empty-able str\n      val2: calculatedEnergy[p1 + 1], // empty-able str\n      rbm: '' // empty-able str\n    };\n\n    let plotParams = processOutput(getPlotParams(params));\n    let plotId = `calcPlot${Math.round(p1 / 2)}`;\n\n    let $plot = $(`\n      <div class=\"math calc-plot-container\" \n           oncontextmenu=\"return false\" onmousedown=\"return false\">\n        <div class=\"row\">\n          <div class=\"col-lg-offset-2 col-md-offset-6 rbmAxisLabel\">\n            \\\\(\\\\omega_{\\\\mathrm{RBM}}\\\\ (\\\\mathrm{cm^{-1}})\\\\)\n          </div>\n        </div>\n        <br />\n        <div class=\"row\" style=\"position: relative;\">\n          <div class=\"yAxisLabel\">${plotParams.yAxisLabel}</div>\n          <div id=\"${plotId}\" style=\"width: 400px; height: 290px; font-family: 'Times New Roman', serif;\"\n               class=\"col-md-offset-1 col-xs-offset-1\"></div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-lg-offset-2 col-md-offset-5 xAxisLabel\">\n               ${plotParams.xAxisLabel}\n          </div>\n        </div>\n      </div>\n    `);\n\n    $plotList.append($plot);\n    drawPlot(plotId, plotParams);\n  }\n\n  if (validResultNumber === 0) {\n    invokeError();\n  }\n\n  MathJax.Hub.Queue(['Typeset', MathJax.Hub]);\n  return false;\n}\n\nfunction generateRBMCalculationResult(n, m, t, $resultList) { // separated function to reduce complexity\n\n  let isAirSuspended = (t === 0);\n  let editRBM = (e) => $('#edRBM').val(e);\n  if (isAirSuspended) {\n    let rbmAS = dt2RBM(Dt(n, m, t), isMetal(n, m) ? 2 : 0, t).toFixed(1).toString();\n    $resultList.append(\n      $(`\n        <tr>\n            <td>\\\\(\\\\omega_\\\\mathrm{RBM}\\\\ ${isMetal(n, m) ? \"(p=3)\" : \"(p=1,2)\"} \\\\)</td>\n            <td>\\\\( ${rbmAS} \\\\ \\\\mathrm{cm^{-1}}\\\\)</td>\n        </tr>\n      `)\n        .click(() => editRBM(rbmAS))\n        .css('cursor', 'pointer')\n    );\n  }\n\n  let rbmGeneral = dt2RBM(Dt(n, m, t), isAirSuspended ? 3 : 0, t).toFixed(1).toString();\n  $resultList.append(\n    $(`\n      <tr>\n          <td>\\\\(\\\\omega_\\\\mathrm{RBM}\\\\ ${isAirSuspended ? \"(p>3)\" : \"\"} \\\\)</td>\n          <td>\\\\( ${rbmGeneral} \\\\ \\\\mathrm{cm^{-1}}\\\\)</td>\n      </tr>\n    `)\n      .click(() => editRBM(rbmGeneral))\n      .css('cursor', 'pointer')\n  );\n}\n"]}